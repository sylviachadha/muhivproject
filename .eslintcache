[{"/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/index.js":"1","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportWebVitals.js":"2","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/main/App.js":"3","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/pages/dashboard.js":"4","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/maritalstatus.js":"5","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/risk.js":"6","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/gender.js":"7","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/pages/report.js":"8","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/partnerhiv.js":"9","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/overview.js":"10","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/components/sidemenu.js":"11","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/components/dateselection.js":"12","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/components/bangkokmap.js":"13","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/components/header.js":"14","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/pages/home.js":"15","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/age.js":"16","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/site.js":"17"},{"size":505,"mtime":1614687761116,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1614687761118,"results":"20","hashOfConfig":"19"},{"size":1977,"mtime":1616183387255,"results":"21","hashOfConfig":"19"},{"size":30434,"mtime":1616183033378,"results":"22","hashOfConfig":"19"},{"size":4642,"mtime":1616116609676,"results":"23","hashOfConfig":"19"},{"size":3818,"mtime":1616182863561,"results":"24","hashOfConfig":"19"},{"size":4612,"mtime":1614687761118,"results":"25","hashOfConfig":"19"},{"size":14235,"mtime":1614687761118,"results":"26","hashOfConfig":"19"},{"size":5074,"mtime":1616183839875,"results":"27","hashOfConfig":"19"},{"size":14247,"mtime":1614687761119,"results":"28","hashOfConfig":"19"},{"size":6542,"mtime":1614687761114,"results":"29","hashOfConfig":"19"},{"size":1617,"mtime":1616185629693,"results":"30","hashOfConfig":"19"},{"size":1439547,"mtime":1614687761113,"results":"31","hashOfConfig":"19"},{"size":1076,"mtime":1614687761113,"results":"32","hashOfConfig":"19"},{"size":7152,"mtime":1614687761118,"results":"33","hashOfConfig":"19"},{"size":4784,"mtime":1616118084458,"results":"34","hashOfConfig":"19"},{"size":4803,"mtime":1616183537472,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"whn6r3",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/index.js",[],["77","78"],"/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportWebVitals.js",[],"/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/main/App.js",[],"/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/pages/dashboard.js",["79","80","81","82"],"import React, {useState} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Typography} from \"@material-ui/core\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Plot from \"react-plotly.js\";\n\nimport {SVGMap} from \"react-svg-map\";\nimport BangkokSVG from '../components/bangkokmap';\nimport \"../css/map.css\";\nimport \"react-svg-map/lib/index.css\";\n\nconst useStyles = makeStyles(theme => ({\n    mainContainer: {\n        padding: 0,\n        margin: 0\n    },\n    root: {\n        minWidth: 180,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: '1.5rem',\n    },\n    pos: {\n        fontSize: 20,\n        color: \"brown\"\n    },\n    h4: {\n        color: \"#3f72af\"\n    },\n\n\n}))\n\nexport default function Dashboard() {\n\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>â€¢</span>;\n\n    const Gauge1data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: 90.1, number: {suffix: \"%\"},\n            title: {text: \"Tested by RTRI\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    const Gauge2data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: 8.8, number: {suffix: \"%\"},\n            title: {text: \"RTRI Recent\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    const Gauge3data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: 25, number: {suffix: \"%\"},\n            title: {text: \"Reclassified Longterm\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    const Gauge4data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: 5.5, number: {suffix: \"%\"},\n            title: {text: \"RITA Recent\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    // Site Location\n    const xValue = ['VCT Site1', 'VCT Site2', 'VCT Site3', 'VCT Site4'];\n\n    const yValue = [20, 14, 23, 50];\n    const yValue2 = [24, 16, 20, 30];\n\n    const trace0 = {\n        x: xValue,\n        y: yValue,\n        type: 'bar',\n        text: yValue.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"LT\",\n        opacity: 0.5,\n        marker: {\n            color: 'rgb(158,202,225)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const trace1 = {\n        x: xValue,\n        y: yValue2,\n        type: 'bar',\n        text: yValue2.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"Recent\",\n        marker: {\n            color: 'rgba(58,200,225,.5)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const Bar1Data = [trace0, trace1];\n\n    const Bar1Layout = {\n        width: 400,\n        height: 400,\n        title: \"RTRI by Site\",\n        xaxis: {title: 'Hospitals'},\n        yaxis: {title: 'No of HIV Cases'}\n    };\n\n\n    // Age Group\n    const x1Value = ['15-25', '25-35', '35-45', '45-55'];\n\n    const y1Value = [20, 30, 25, 30];\n    const y1Value2 = [24, 40, 16, 10];\n\n    const trace2 = {\n        x: x1Value,\n        y: y1Value,\n        type: 'bar',\n        text: y1Value.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"LT\",\n        opacity: 0.5,\n        marker: {\n            color: 'rgb(158,202,225)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const trace3 = {\n        x: x1Value,\n        y: y1Value2,\n        type: 'bar',\n        text: y1Value2.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"Recent\",\n        marker: {\n            color: 'rgba(58,200,225,.5)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const Bar2Data = [trace2, trace3];\n\n    const Bar2Layout = {\n        width: 450,\n        height: 350,\n        title: \"By Age Group\",\n        xaxis: {title: 'Age group'},\n        yaxis: {title: 'No of HIV Cases'}\n    };\n\n    // Gender\n    const x2Value = ['Male', 'Female', 'Transgender'];\n\n    const y2Value = [15, 25, 37];\n    const y2Value2 = [18, 22, 30];\n\n    const trace4 = {\n        x: x2Value,\n        y: y2Value,\n        type: 'bar',\n        text: y2Value.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"LT\",\n        opacity: 0.5,\n        marker: {\n            color: 'rgb(203,222,207)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const trace5 = {\n        x: x2Value,\n        y: y2Value2,\n        type: 'bar',\n        text: y2Value2.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"Recent\",\n        marker: {\n            color: 'rgb(134,226,114)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const Bar3Data = [trace4, trace5];\n\n    const Bar3Layout = {\n        width: 410,\n        height: 350,\n        title: \"By Gender\",\n        xaxis: {title: 'Gender'},\n        yaxis: {title: 'No of HIV Cases'}\n    };\n\n    // Marital Status\n    const x3Value = ['Single', 'Married', 'Divorced'];\n\n    const y3Value = [20, 40, 25];\n    const y3Value2 = [24, 30, 16];\n\n    const trace6 = {\n        x: x3Value,\n        y: y3Value,\n        type: 'bar',\n        text: y3Value.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"LT\",\n        opacity: 0.5,\n        marker: {\n            color: 'rgb(211,206,219)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const trace7 = {\n        x: x3Value,\n        y: y3Value2,\n        type: 'bar',\n        text: y3Value2.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"Recent\",\n        marker: {\n            color: 'rgb(229,209,112)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const Bar4Data = [trace6, trace7];\n\n    const Bar4Layout = {\n        width: 420,\n        height: 350,\n        title: \"Marital Status\",\n        xaxis: {title: 'Marital Status'},\n        yaxis: {title: 'No of HIV Cases'}\n    };\n\n    // Pie Recent Infection\n    const Pie1Data = [{\n        values: [150, 280],\n        labels: ['Recent', 'Long-Term'],\n        type: 'pie'\n    }];\n\n    const Pie1Layout = {\n        width: 400,\n        height: 400,\n        title: 'RITA by Percentage'\n    };\n\n\n\n    const Pie2Data = [{\n        type: \"pie\",\n        values: [500000, 100000, 80000, 5000, 2000],\n        labels: ['Heterosexual', 'MSM/TG', 'Injection Drug Use', 'Blood Transfusion', 'Perinatal'],\n        textinfo: \"label+percent\",\n        textposition: \"outside\",\n        automargin: true\n    }]\n\n    const Pie2Layout = {\n        height: 350,\n        width: 450,\n        margin: {\"t\": 0, \"b\": 0, \"l\": 0, \"r\": 0},\n        showlegend: true,\n        title: \"Transmission Risk\"\n    }\n\n\n    //Table start\n    var tableValues = [\n        ['Heterosexual', 'Blood Transfusion', 'IDU', 'MSM/TG', 'Perinatal', '<b>TOTAL</b>'],\n        [500000, 5000, 80000, 100000, 2000, 689000]]\n\n    var tableData = [{\n        type: 'table',\n        header: {\n            values: [[\"<b>Risk</b>\"], [\"<b>HIV Transmission</b>\"]],\n            align: [\"left\", \"center\"],\n            line: {width: 1, color: '#506784'},\n            fill: {color: '#119DFF'},\n            font: {family: \"Arial\", size: 16, color: \"white\"}\n        },\n        cells: {\n            values: tableValues,\n            align: [\"left\", \"center\"],\n            line: {color: \"#506784\", width: 1},\n            fill: {color: ['#25FEFD', 'white']},\n            font: {family: \"Arial\", size: 14, color: [\"#506784\"]}\n        }\n    }]\n\n    const tableLayout = {\n        height: 350,\n        width: 430,\n        margin: {\"t\": 100, \"b\": 0, \"l\": 0, \"r\": 0},\n        showlegend: true,\n        title: \"Risk Table\"\n    }\n\n\n    //HIV Partner Test\n    const x5Value = ['Contacted', 'Tested', 'HIV +ve', 'Recency +ve', 'On ART'];\n\n    const y5Value = [120, 100, 80, 20, 20];\n    const y5Value2 = [271, 200, 178, 90, 88];\n\n    const trace8 = {\n        x: x5Value,\n        y: y5Value,\n        type: 'bar',\n        text: y5Value.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"LT\",\n        opacity: 0.5,\n        marker: {\n            color: 'rgb(226,184,177)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const trace9 = {\n        x: x5Value,\n        y: y5Value2,\n        type: 'bar',\n        text: y5Value2.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"Recent\",\n        marker: {\n            color: 'rgb(212,72,67)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const Bar5Data = [trace8, trace9];\n\n    const Bar5Layout = {\n        width: 480,\n        height: 350,\n        title: \"HIV Partner Test\",\n        xaxis: {title: 'HIV Recency'},\n        yaxis: {title: \"Index Client's Partner\"}\n    };\n\n\n    //Map start\n    const [data, setData] = useState({\n        pointedLocation: null,\n        count: 0,\n        focusedLocation: null,\n        selectedLocations: [],\n        tooltipStyle: {\n            display: 'none'\n        }\n    });\n\n    const [locationCount, setLocationCount] = useState([\n        {location: \"Bang Phlat\", count: 10},\n        {location: \"Huai Khwang\", count: 20},\n        {location: \"Wang Thong Lang\", count: 30},\n        {location: \"Thawi Watthana\", count: 40},\n        {location: \"Din Daeng\", count: 50},\n        {location: \"Dusit\", count: 60},\n        {location: \"Ratchathewi\", count: 70},\n        {location: \"Vadhana\", count: 80},\n        {location: \"Thon buri\", count: 90},\n        {location: \"Sathon\", count: 20},\n        {location: \"Bang Na\", count: 30},\n        {location: \"Don Mueang\", count: 200},\n        {location: \"Bang Kapi\", count: 20},\n        {location: \"Lat Phrao\", count: 20},\n\n    ]);\n\n    const countArray = locationCount.flatMap(x => [x.count])\n    const median = calculateMedian(countArray)\n\n\n    const handleLocationMouseOver = (e) => {\n        const thaiLocation = getLocationName(e);\n        const englishLocation = getLocationId(e);\n\n        const locationRow = locationCount.find(element => element.location === englishLocation);\n        if (locationRow !== undefined && locationRow.count > 0) {\n            setData(prevState => ({\n                ...prevState,\n                count: locationRow.count\n            }));\n        } else {\n            setData(prevState => ({\n                ...prevState,\n                count: 0\n            }));\n        }\n        setData(prevState => ({\n            ...prevState,\n            pointedLocation: thaiLocation + \"  -  \" + englishLocation\n        }));\n    };\n\n\n    const handleLocationMouseOut = () => {\n        setData(prevState => ({\n            ...prevState,\n            pointedLocation: null,\n            tooltipStyle: {display: 'none'},\n        }));\n\n    }\n\n    const handleLocationMouseMove = (event) => {\n        const tooltipStyle = {\n            display: 'block',\n            top: event.clientY + 10,\n            left: event.clientX - 100\n        };\n\n        setData(prevState => ({\n            ...prevState,\n            tooltipStyle: tooltipStyle,\n        }));\n    }\n\n\n    const getLocationClassName = (mapLocation, _) => {\n\n        const locationRow = locationCount.find(element => element.location === mapLocation.id);\n        let strengthClass = \"color-strength1\"\n\n        if (locationRow !== undefined && locationRow.count > 0) {\n            if (locationRow.count < median) {\n                strengthClass = \"color-strength2\"\n            } else {\n                strengthClass = \"color-strength3\"\n            }\n\n        }\n        return `svg-map ${strengthClass}`\n\n    }\n    //Map end\n\n\n    return (\n        <Grid container className={classes.mainContainer} direction={\"column\"}>\n            <Grid item className={classes.maingrid1}>\n                <Grid container direction={\"row\"}>\n                    <Grid item>\n                        <Grid container direction={\"column\"}>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            4321\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            Total Test\n                                        </Typography>\n\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            318\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            New HIV +ve\n                                            <br/>\n\n                                        </Typography>\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            <br/>\n                                            57\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            Tested by RTRI\n                                        </Typography>\n\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            5\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            RTRI Recent\n                                            <br/>\n\n                                        </Typography>\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            <br/>\n                                            52\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            RTRI Longterm\n                                        </Typography>\n\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            4\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            VL Result Complete\n                                            <br/>\n\n                                        </Typography>\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            <br/>\n                                            1\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            Reclassified Longterm\n                                        </Typography>\n\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            3\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            RITA Recent\n                                            <br/>\n\n                                        </Typography>\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            <br/>\n                                            52\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            RITA Longterm\n                                        </Typography>\n\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <Grid container direction={\"column\"}>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            402\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            Total HIV +ve\n                                        </Typography>\n\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge1data}\n                                            layout={{\n                                                width: 300, height: 180, margin: {t: 0, b: 0},\n                                                paper_bgcolor: \"#eaeaea\"\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar: false, staticPlot: false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge2data}\n                                            layout={{\n                                                width: 300, height: 180, margin: {t: 0, b: 0},\n                                                paper_bgcolor: \"#eaeaea\"\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar: false, staticPlot: false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge3data}\n                                            layout={{\n                                                width: 300, height: 180, margin: {t: 0, b: 0},\n                                                paper_bgcolor: \"#eaeaea\"\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar: false, staticPlot: false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge4data}\n                                            layout={{\n                                                width: 300, height: 180, margin: {t: 0, b: 0},\n                                                paper_bgcolor: \"#eaeaea\"\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar: false, staticPlot: false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <Grid container direction={\"column\"}>\n                            <Grid item>\n                                <Grid container>\n                                    <Grid item>\n                                        <Card className={classes.root} variant=\"outlined\">\n                                            <CardContent>\n\n                                                <Plot\n                                                    data={Bar1Data}\n                                                    layout={Bar1Layout}\n\n                                                    // To disable trace\n                                                    config={{displayModeBar: false, staticPlot: false}}\n                                                />\n                                            </CardContent>\n                                        </Card>\n                                    </Grid>\n                                    <Grid item>\n                                        <Card className={classes.root} variant=\"outlined\">\n                                            <CardContent>\n\n                                                <Plot\n                                                    data={Pie1Data}\n                                                    layout={Pie1Layout}\n\n                                                    // To disable trace\n                                                    config={{displayModeBar: false, staticPlot: false}}\n                                                />\n                                            </CardContent>\n                                        </Card>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item  style={{marginTop:\"2em\",marginLeft:\"6em\"}}>\n                                <Grid container>\n                                    <p className={classes.title}>Hotspot Locations</p>\n                                    <SVGMap\n                                        map={BangkokSVG}\n                                        locationClassName={getLocationClassName}\n                                        onLocationMouseOver={handleLocationMouseOver}\n                                        onLocationMouseOut={handleLocationMouseOut}\n                                        onLocationMouseMove={handleLocationMouseMove}\n\n                                    />\n                                    <div className=\"svg-map-tooltip\" style={data.tooltipStyle}>\n                                        <div>Location:{data.pointedLocation}</div>\n                                        <div>Count:{data.count}</div>\n                                    </div>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n\n            <Grid item className={classes.maingrid3}>\n                <Grid container>\n                    <Grid item>\n                        <Card className={classes.root} variant=\"outlined\">\n                            <CardContent>\n\n                                <Plot\n                                    data={Bar2Data}\n                                    layout={Bar2Layout}\n\n                                    // To disable trace\n                                    config={{displayModeBar: false, staticPlot: false}}\n                                />\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item>\n                        <Card className={classes.root} variant=\"outlined\">\n                            <CardContent>\n\n                                <Plot\n                                    data={Pie2Data}\n                                    layout={Pie2Layout}\n\n                                    // To disable trace\n                                    config={{displayModeBar: false, staticPlot: false}}\n                                />\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item>\n                        <Card className={classes.root} variant=\"outlined\">\n                            <CardContent>\n\n                                <Plot\n                                    data={Bar4Data}\n                                    layout={Bar4Layout}\n\n                                    // To disable trace\n                                    config={{displayModeBar: false, staticPlot: false}}\n                                />\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </Grid>\n\n            <Grid item className={classes.maingrid4}>\n                <Grid container>\n                    <Grid item>\n                        <Card className={classes.root} variant=\"outlined\">\n                            <CardContent>\n\n                                <Plot\n                                    data={Bar3Data}\n                                    layout={Bar3Layout}\n\n                                    // To disable trace\n                                    config={{displayModeBar: false, staticPlot: false}}\n                                />\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item>\n                        <Card className={classes.root} variant=\"outlined\">\n                            <CardContent>\n\n                                <Plot\n                                    data={tableData}\n                                    layout={tableLayout}\n\n                                    // To disable trace\n                                    config={{displayModeBar: false, staticPlot: false}}\n                                />\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item>\n                        <Card className={classes.root} variant=\"outlined\">\n                            <CardContent>\n\n                                <Plot\n                                    data={Bar5Data}\n                                    layout={Bar5Layout}\n\n                                    // To disable trace\n                                    config={{displayModeBar: false, staticPlot: false}}\n                                />\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </Grid>\n\n        </Grid>\n\n    );\n}\n\n// Map function for median\nfunction getLocationName(event) {\n    return event.target.attributes.name.value;\n}\n\nfunction getLocationId(event) {\n    return event.target.id;\n}\n\nfunction calculateMedian(values) {\n    if (values.length === 0) return 0;\n\n    values.sort(function (a, b) {\n        return a - b;\n    });\n\n    const half = Math.floor(values.length / 2);\n\n    if (values.length % 2)\n        return values[half];\n\n    return (values[half - 1] + values[half]) / 2.0;\n}\n// Map function","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/maritalstatus.js",[],"/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/risk.js",[],"/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/gender.js",[],"/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/pages/report.js",["83","84","85","86","87"],"import React from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport VerticalMenu from \"../components/sidemenu\";\nimport DateSelection from \"../components/dateselection\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Plot from \"react-plotly.js\";\n\nconst useStyles = makeStyles(theme => ({\n    mainContainer: {\n        padding: 0,\n        margin: 0\n    },\n    sideMenu: {\n        display: \"inline-block\",\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"300px\",\n        backgroundColor: '#1f5f8b'\n    },\n    sideMenu2: {\n    },\n    item: {\n        marginLeft: 350\n    },\n    itemHeading: {\n        marginLeft: 350,\n        marginTop: 20,\n        borderBottom: \"3px solid #cdd0cb\",\n        width: \"80%\"\n    },\n    text: {\n        marginTop: 30,\n        marginBottom: 50,\n        fontWeight: \"200\"\n    },\n    root: {\n        minWidth: 250,\n        marginRight: 50\n    },\n    pos: {\n        fontSize: 20,\n        height: 170\n    },\n    h4: {\n        color: \"#3f72af\",\n    },\n\n}))\n\nexport default function Report() {\n\n    const classes = useStyles();\n\n    const Gauge1data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: 90.1, number: {suffix: \"%\"},\n            title: {text: \"Tested by RTRI\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    const Gauge2data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: 30.4, number: {suffix: \"%\"},\n            title: {text: \"RTRI Recent\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    const Gauge3data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: 5, number: {suffix: \"%\"},\n            title: {text: \"RITA Recent\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    return (\n\n        <Grid container className={classes.mainContainer}>\n            <Grid item className={classes.sideMenu}>\n                <VerticalMenu></VerticalMenu>\n            </Grid>\n            <Grid item>\n                <Grid container className={classes.sideMenu2} direction={\"column\"}>\n                    <Grid item className={classes.itemHeading}>\n                        <Typography variant={'h6'}>\n                            Overall Testing\n                        </Typography>\n                    </Grid>\n                    <Grid item className={classes.item}>\n                        <Grid container className={classes.text} >\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n\n                                            318\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Newly Diagnosed HIV +ve\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            310\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Tested by RTRI\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge1data}\n                                            layout={{width: 320, height: 220, margin: { t: 0, b: 0 },  paper_bgcolor: \"lavender\",\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar:false,staticPlot:false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item className={classes.itemHeading}>\n                        <Typography variant={'h6'}>\n                            Rapid Test for Recent Infection [RTRI] Result\n                        </Typography>\n                    </Grid>\n                    <Grid item className={classes.item}>\n                        <Grid container className={classes.text}>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n\n                                            70\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            RTRI Recent\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            240\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Longterm\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge2data}\n                                            layout={{width: 320, height: 220, margin: { t: 0, b: 0 },  paper_bgcolor: \"lavender\",\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar:false,staticPlot:false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item className={classes.itemHeading}>\n                        <Typography variant={'h6'}>\n                            Viral Load Test Results\n                        </Typography>\n                    </Grid>\n                    <Grid item className={classes.item}>\n                        <Grid container className={classes.text}>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n\n                                            65\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            VL Result Complete\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            5\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Reclassified Longterm\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge3data}\n                                            layout={{width: 320, height: 220, margin: { t: 0, b: 0 },  paper_bgcolor: \"lavender\",\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar:false,staticPlot:false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item className={classes.itemHeading}>\n                    <Typography variant={'h6'}>\n                        Recent Infection Testing Algorithm [RITA] Result\n                    </Typography>\n\n                    </Grid>\n                    <Grid item className={classes.item}>\n                        <Grid container className={classes.text}>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n\n                                            62\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            RITA Recent\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            3\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Longterm\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge3data}\n                                            layout={{width: 320, height: 220, margin: { t: 0, b: 0 },  paper_bgcolor: \"lavender\",\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar:false,staticPlot:false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/partnerhiv.js",[],"/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/overview.js",["88","89","90","91","92"],"import React from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport VerticalMenu from \"../components/sidemenu\";\nimport DateSelection from \"../components/dateselection\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Plot from \"react-plotly.js\";\n\nconst useStyles = makeStyles(theme => ({\n    mainContainer: {\n        padding: 0,\n        margin: 0\n    },\n    sideMenu: {\n        display: \"inline-block\",\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"300px\",\n        backgroundColor: '#1f5f8b'\n    },\n    sideMenu2: {\n    },\n    item: {\n        marginLeft: 350\n    },\n    itemHeading: {\n        marginLeft: 350,\n        marginTop: 20,\n        borderBottom: \"3px solid #cdd0cb\",\n        width: \"80%\"\n    },\n    text: {\n        marginTop: 30,\n        marginBottom: 50,\n        fontWeight: \"200\"\n    },\n    root: {\n        minWidth: 250,\n        marginRight: 50\n    },\n    pos: {\n        fontSize: 20,\n        height: 170\n    },\n    h4: {\n        color: \"#3f72af\",\n    },\n\n}))\n\nexport default function Report() {\n\n    const classes = useStyles();\n\n    const Gauge1data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: 90.1, number: {suffix: \"%\"},\n            title: {text: \"Tested by RTRI\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    const Gauge2data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: 30.4, number: {suffix: \"%\"},\n            title: {text: \"RTRI Recent\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    const Gauge3data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: 5, number: {suffix: \"%\"},\n            title: {text: \"RITA Recent\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    return (\n\n        <Grid container className={classes.mainContainer}>\n            <Grid item className={classes.sideMenu}>\n                <VerticalMenu></VerticalMenu>\n            </Grid>\n            <Grid item>\n                <Grid container className={classes.sideMenu2} direction={\"column\"}>\n                    <Grid item className={classes.itemHeading}>\n                        <Typography variant={'h6'}>\n                            Overall Testing\n                        </Typography>\n                    </Grid>\n                    <Grid item className={classes.item}>\n                        <Grid container className={classes.text} >\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n\n                                            318\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Newly Diagnosed HIV +ve\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            310\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Tested by RTRI\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge1data}\n                                            layout={{width: 320, height: 220, margin: { t: 0, b: 0 },  paper_bgcolor: \"lavender\",\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar:false,staticPlot:false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item className={classes.itemHeading}>\n                        <Typography variant={'h6'}>\n                            Rapid Test for Recent Infection [RTRI] Result\n                        </Typography>\n                    </Grid>\n                    <Grid item className={classes.item}>\n                        <Grid container className={classes.text}>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n\n                                            70\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            RTRI Recent\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            240\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Longterm\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge2data}\n                                            layout={{width: 320, height: 220, margin: { t: 0, b: 0 },  paper_bgcolor: \"lavender\",\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar:false,staticPlot:false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item className={classes.itemHeading}>\n                        <Typography variant={'h6'}>\n                            Viral Load Test Results\n                        </Typography>\n                    </Grid>\n                    <Grid item className={classes.item}>\n                        <Grid container className={classes.text}>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n\n                                            65\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            VL Result Complete\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            5\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Reclassified Longterm\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge3data}\n                                            layout={{width: 320, height: 220, margin: { t: 0, b: 0 },  paper_bgcolor: \"lavender\",\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar:false,staticPlot:false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item className={classes.itemHeading}>\n                        <Typography variant={'h6'}>\n                            Recent Infection Testing Algorithm [RITA] Result\n                        </Typography>\n\n                    </Grid>\n                    <Grid item className={classes.item}>\n                        <Grid container className={classes.text}>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n\n                                            62\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            RITA Recent\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            3\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Longterm\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge3data}\n                                            layout={{width: 320, height: 220, margin: { t: 0, b: 0 },  paper_bgcolor: \"lavender\",\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar:false,staticPlot:false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/components/sidemenu.js",["93","94","95"],"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\n\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        height: '100%',\n        // backgroundColor: '#364f6b','#5588a3'\n        backgroundColor: '#1f5f8b',\n        color: 'white',\n        display: 'inline-block',\n        fontSize:20,\n        listItemText:{\n            fontSize:'5em',//Insert your required size\n        }\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n}));\n\nexport default function VerticalMenu() {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n\n\n    const [openRecency, setOpenRecency] = React.useState(true);\n\n\n    const handleRecencyClick = () => {\n        setOpenRecency(!openRecency);\n    };\n\n    return (\n        <List component=\"nav\" className={classes.root}>\n\n            <ListItem button onClick={handleRecencyClick}>\n                <ListItemIcon>\n                    <AssessmentIcon style={{color: '#fff'}}/>\n                </ListItemIcon>\n                <ListItemText primary=\"Recency Report\"/>\n                {openRecency ? <ExpandLess/> : <ExpandMore/>}\n            </ListItem>\n\n            <Collapse in={openRecency} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    <ListItem button component=\"a\" href=\"/overview\" className={classes.nested}>\n                        <ListItemIcon>\n                            <PlayArrowIcon style={{color: '#fff'}}/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Overview\"/>\n                    </ListItem>\n\n                </List>\n            </Collapse>\n\n\n            <ListItem button onClick={{}}>\n                <ListItemIcon>\n                    <AssessmentIcon style={{color: '#fff'}}/>\n                </ListItemIcon>\n                <ListItemText primary=\"Demographic\"/>\n                {open ? <ExpandLess/> : <ExpandMore/>}\n            </ListItem>\n\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    <ListItem button component=\"a\" href=\"/by-gender\" className={classes.nested}>\n                        <ListItemIcon>\n                            <PlayArrowIcon style={{color: '#fff'}}/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"By Gender\"/>\n                    </ListItem>\n                    <ListItem button component=\"a\" href=\"/by-status\" className={classes.nested}>\n                        <ListItemIcon>\n                            <PlayArrowIcon style={{color: '#fff'}}/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"By Marital status\"/>\n                    </ListItem>\n                    <ListItem button component=\"a\" href=\"/by-age\" className={classes.nested}>\n                        <ListItemIcon>\n                            <PlayArrowIcon style={{color: '#fff'}}/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"By Age\"/>\n                    </ListItem>\n                </List>\n            </Collapse>\n\n\n            <ListItem button onClick={{}}>\n                <ListItemIcon>\n                    <AssessmentIcon style={{color: '#fff'}}/>\n                </ListItemIcon>\n                <ListItemText primary=\"Behaviour\"/>\n                {open ? <ExpandLess/> : <ExpandMore/>}\n            </ListItem>\n\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    <ListItem button component=\"a\" href=\"/by-risk\" className={classes.nested}>\n                        <ListItemIcon>\n                            <PlayArrowIcon style={{color: '#fff'}}/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"By Transmission Risk\"/>\n                    </ListItem>\n\n                </List>\n            </Collapse>\n\n            <ListItem button onClick={{}}>\n                <ListItemIcon>\n                    <AssessmentIcon style={{color: '#fff'}}/>\n                </ListItemIcon>\n                <ListItemText primary=\"Geographic\"/>\n                {open ? <ExpandLess/> : <ExpandMore/>}\n            </ListItem>\n\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    <ListItem button className={classes.nested}>\n                        <ListItemIcon>\n                            <PlayArrowIcon style={{color: '#fff'}}/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"By Area\"/>\n                    </ListItem>\n                    <ListItem button component=\"a\" href=\"/by-site\" className={classes.nested}>\n                        <ListItemIcon>\n                            <PlayArrowIcon style={{color: '#fff'}}/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"By Testing Site\"/>\n                    </ListItem>\n                </List>\n            </Collapse>\n\n            <ListItem button onClick={{}}>\n                <ListItemIcon>\n                    <AssessmentIcon style={{color: '#fff'}}/>\n                </ListItemIcon>\n                <ListItemText primary=\"Partner Test\"/>\n                {open ? <ExpandLess/> : <ExpandMore/>}\n            </ListItem>\n\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    <ListItem button component=\"a\" href=\"/by-outcome\" className={classes.nested}>\n                        <ListItemIcon>\n                            <PlayArrowIcon style={{color: '#fff'}}/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"HIV Test Outcome\"/>\n                    </ListItem>\n                </List>\n            </Collapse>\n\n        </List>\n    );\n}","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/components/dateselection.js",["96"],"/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/components/bangkokmap.js",[],"/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/components/header.js",["97"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport logo from \"../images/hivlogo.svg\"\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    toolbar: {\n        backgroundColor: \"#3f72af\"\n        // backgroundColor: \"#253b6e\"\n    },\n    title: {\n        flexGrow: 1\n    },\n    icon: {\n        width:50,\n        height:50\n    },\n}));\n\nexport default function ButtonAppBar() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar className={classes.toolbar} >\n\n                    <Typography variant={\"h4\"} className={classes.title}>\n                        Bangkok HIV Epidemic Analysis\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/pages/home.js",["98"],"import React from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Typography} from \"@material-ui/core\";\nimport dbimage from \"../images/DB.svg\"\nimport rpimage from \"../images/Rep.svg\"\nimport model from \"../images/model.svg\"\nimport Box from \"@material-ui/core/Box\";\n\n\nconst useStyles = makeStyles(theme => ({\n    mainContainer: {\n        padding: 0,\n        margin: 0\n    },\n    grid1: {\n        padding: 10,\n        backgroundColor: \"#eaeaea\",\n    },\n    grid2: {\n        padding: 30,\n        backgroundColor: \"white\",\n        borderBottom: '5px solid white',\n        // justifyContent: \"flex-end\"\n    },\n    grid3: {\n        padding: 30,\n        backgroundColor: \"white\",\n        borderBottom: '5px solid white',\n    },\n    grid4: {\n        padding: 30,\n        backgroundColor: \"white\",\n        borderBottom: '5px solid white',\n    },\n    griditem1: {\n        marginLeft: 300,\n        marginRight: 50,\n        backgroundColor: \"#white\",\n    },\n    griditem2: {\n        padding: 10,\n        backgroundColor: \"white\",\n        marginLeft: 30,\n    },\n    griditem3: {\n        marginLeft: 300,\n        marginRight: 50,\n        backgroundColor: \"white\",\n\n    },\n    h4:{\n      paddingLeft:\"0.5em\"\n    },\n    leftContent: {\n      borderRight : \".5em solid white\"\n    },\n    rightContent:{\n        borderLeft : \".5em solid white\"\n    },\n    icon: {\n        width: 100,\n        height: 100,\n        backgroundColor: \"white\",\n        marginRight:\"4em\",\n        marginLeft:\"3em\"\n\n    },\n    icon1: {\n        width: 100,\n        height: 100,\n        backgroundColor: \"white\",\n        marginRight:\"10em\",\n        marginLeft:\"10em\"\n\n    },\n    logo: {\n        width: 50,\n        height: 50,\n        marginRight:\"4em\",\n        marginLeft:\"3em\"\n    },\n    vertical: {\n        borderLeft: \"6px solid white\",\n        height: \"450px\",\n        position: \"absolute\",\n        left: \"50%\"\n    }\n\n}))\n\nexport default function Home() {\n\n    const classes = useStyles();\n\n    return (\n        <Grid container className={classes.mainContainer} direction={\"column\"}>\n            <Grid item className={classes.grid1}>\n                <Grid container>\n                    <Grid item>\n                        <Typography className={classes.h4} variant={\"h4\"}>\n                            Services\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <img\n                            className={classes.logo}\n                            alt=\"Dashboard icon\"\n                            src={dbimage}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <img\n                            className={classes.logo}\n                            alt=\"Dashboard icon\"\n                            src={rpimage}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <img\n                            className={classes.logo}\n                            alt=\"Dashboard icon\"\n                            src={model}\n                        />\n                    </Grid>\n                </Grid>\n\n\n            </Grid>\n            <Grid item className={classes.grid2}>\n                {/*<Grid item className={classes.vertical}>*/}\n                {/*</Grid>*/}\n\n                <Grid container>\n                    <Grid item className={classes.griditem1}>\n                        <Grid container direction={\"column\"}>\n                            <Grid item >\n                                <Typography variant={\"h4\"}>\n                                    1. Dashboard\n                                </Typography>\n                            </Grid>\n                            <Grid item>\n                                <Typography variant={\"subtitle1\"}>\n                                    Check for Summarised and concise information\n                                </Typography>\n                                <Typography variant={\"subtitle1\"}>\n                                    Key metrics in one glance view, real time monitoring\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item >\n                        <img\n                            className={classes.icon}\n                            alt=\"Dashboard icon\"\n                            src={dbimage}\n                        />\n                    </Grid>\n                </Grid>\n\n            </Grid>\n            <Grid item className={classes.grid3}>\n\n                <Grid container>\n                    <Grid item className={classes.griditem3}>\n                        <Grid container direction={\"column\"}>\n                            <Grid item >\n                                <Typography variant={\"h4\"}>\n                                    2. Report\n                                </Typography>\n                            </Grid>\n                            <Grid item>\n                                <Typography variant={\"subtitle1\"}>\n                                    Check for Detailed information\n                                </Typography>\n                                <Typography variant={\"subtitle1\"}>\n                                    Includes historic data analysis with Trend charts\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item className={classes.griditem2}>\n                        <img\n                            className={classes.icon}\n                            alt=\"Report icon\"\n                            src={rpimage}\n                        />\n                    </Grid>\n                </Grid>\n\n            </Grid>\n            <Grid item className={classes.grid4}>\n\n                <Grid container>\n                    <Grid item className={classes.griditem1}>\n                        <Grid container direction={\"column\"}>\n                            <Grid item>\n                                <Typography variant={\"h4\"}>\n                                    3. Statistical Model\n                                </Typography>\n                            </Grid>\n                            <Grid item>\n                                <Typography variant={\"subtitle1\"}>\n                                    To infer about the population\n                                </Typography>\n                                <Typography variant={\"subtitle1\"}>\n                                    Negative Binomial Distribution Model\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item >\n                        <img\n                            className={classes.icon1}\n                            alt=\"Models icon\"\n                            src={model}\n                        />\n                    </Grid>\n                </Grid>\n\n            </Grid>\n        </Grid>\n    );\n}","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/age.js",[],"/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/site.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":19},{"ruleId":"103","severity":1,"message":"107","line":8,"column":8,"nodeType":"105","messageId":"106","endLine":8,"endColumn":14},{"ruleId":"103","severity":1,"message":"108","line":46,"column":11,"nodeType":"105","messageId":"106","endLine":46,"endColumn":15},{"ruleId":"103","severity":1,"message":"109","line":429,"column":27,"nodeType":"105","messageId":"106","endLine":429,"endColumn":43},{"ruleId":"103","severity":1,"message":"110","line":5,"column":8,"nodeType":"105","messageId":"106","endLine":5,"endColumn":21},{"ruleId":"103","severity":1,"message":"111","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":15},{"ruleId":"103","severity":1,"message":"112","line":8,"column":8,"nodeType":"105","messageId":"106","endLine":8,"endColumn":14},{"ruleId":"103","severity":1,"message":"104","line":10,"column":8,"nodeType":"105","messageId":"106","endLine":10,"endColumn":19},{"ruleId":"103","severity":1,"message":"107","line":12,"column":8,"nodeType":"105","messageId":"106","endLine":12,"endColumn":14},{"ruleId":"103","severity":1,"message":"110","line":5,"column":8,"nodeType":"105","messageId":"106","endLine":5,"endColumn":21},{"ruleId":"103","severity":1,"message":"111","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":15},{"ruleId":"103","severity":1,"message":"112","line":8,"column":8,"nodeType":"105","messageId":"106","endLine":8,"endColumn":14},{"ruleId":"103","severity":1,"message":"104","line":10,"column":8,"nodeType":"105","messageId":"106","endLine":10,"endColumn":19},{"ruleId":"103","severity":1,"message":"107","line":12,"column":8,"nodeType":"105","messageId":"106","endLine":12,"endColumn":14},{"ruleId":"103","severity":1,"message":"113","line":3,"column":8,"nodeType":"105","messageId":"106","endLine":3,"endColumn":21},{"ruleId":"103","severity":1,"message":"114","line":12,"column":8,"nodeType":"105","messageId":"106","endLine":12,"endColumn":18},{"ruleId":"103","severity":1,"message":"115","line":37,"column":18,"nodeType":"105","messageId":"106","endLine":37,"endColumn":25},{"ruleId":"103","severity":1,"message":"116","line":2,"column":16,"nodeType":"105","messageId":"106","endLine":2,"endColumn":24},{"ruleId":"103","severity":1,"message":"117","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":12},{"ruleId":"103","severity":1,"message":"118","line":8,"column":8,"nodeType":"105","messageId":"106","endLine":8,"endColumn":11},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'CardActions' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'bull' is assigned a value but never used.","'setLocationCount' is assigned a value but never used.","'DateSelection' is defined but never used.","'Toolbar' is defined but never used.","'AppBar' is defined but never used.","'ListSubheader' is defined but never used.","'StarBorder' is defined but never used.","'setOpen' is assigned a value but never used.","'useState' is defined but never used.","'logo' is defined but never used.","'Box' is defined but never used.","no-global-assign","no-unsafe-negation"]