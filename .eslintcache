[{"/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/index.js":"1","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportWebVitals.js":"2","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/main/App.js":"3","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/pages/dashboard.js":"4","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/maritalstatus.js":"5","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/risk.js":"6","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/gender.js":"7","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/pages/report.js":"8","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/partnerhiv.js":"9","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/overview.js":"10","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/components/sidemenu.js":"11","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/components/dateselection.js":"12","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/components/bangkokmap.js":"13","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/components/header.js":"14","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/pages/home.js":"15","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/age.js":"16","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/site.js":"17","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/components/toolbar.js":"18"},{"size":505,"mtime":1614687761116,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1614687761118,"results":"21","hashOfConfig":"20"},{"size":1977,"mtime":1616183387255,"results":"22","hashOfConfig":"20"},{"size":38089,"mtime":1616289465245,"results":"23","hashOfConfig":"20"},{"size":4642,"mtime":1616116609676,"results":"24","hashOfConfig":"20"},{"size":3818,"mtime":1616182863561,"results":"25","hashOfConfig":"20"},{"size":4612,"mtime":1614687761118,"results":"26","hashOfConfig":"20"},{"size":14235,"mtime":1614687761118,"results":"27","hashOfConfig":"20"},{"size":5074,"mtime":1616183839875,"results":"28","hashOfConfig":"20"},{"size":14247,"mtime":1614687761119,"results":"29","hashOfConfig":"20"},{"size":6542,"mtime":1616289828985,"results":"30","hashOfConfig":"20"},{"size":1812,"mtime":1616289493060,"results":"31","hashOfConfig":"20"},{"size":1439547,"mtime":1616289517001,"results":"32","hashOfConfig":"20"},{"size":1076,"mtime":1614687761113,"results":"33","hashOfConfig":"20"},{"size":6404,"mtime":1616289433734,"results":"34","hashOfConfig":"20"},{"size":4784,"mtime":1616118084458,"results":"35","hashOfConfig":"20"},{"size":4803,"mtime":1616183537472,"results":"36","hashOfConfig":"20"},{"size":2920,"mtime":1616289577701,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"whn6r3",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},"/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/index.js",[],["82","83"],"/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportWebVitals.js",[],"/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/main/App.js",[],"/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/pages/dashboard.js",["84","85","86","87"],"import React, {useState} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Typography} from \"@material-ui/core\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Plot from \"react-plotly.js\";\n\nimport {SVGMap} from \"react-svg-map\";\nimport BangkokSVG from '../components/bangkokmap';\nimport \"../css/map.css\";\nimport \"react-svg-map/lib/index.css\";\nimport Toolbar from \"../components/toolbar\";\nimport Avatar from '@material-ui/core/Avatar';\n\n\nconst useStyles = makeStyles(theme => ({\n    mainContainer: {\n        padding: 0,\n        margin: 0\n    },\n    root: {\n        minWidth: 180,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: '1.5rem',\n    },\n    pos: {\n        fontSize: 20,\n        color: \"brown\"\n    },\n    h4: {\n        color: \"#3f72af\"\n    },\n\n\n}))\n\nexport default function Dashboard() {\n\n    const viridisColorscale = ['#fdcc8a', '#e34a33', '#b30000'];\n\n\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>â€¢</span>;\n\n    const [startDate, setStartDate] = useState(new Date('2020-01-18'));\n    const [endDate, setEndDate] = useState(new Date()); // today's date\n    const [radioValue, setRadioValue] = React.useState('all');\n\n\n    const [gaugeData, setGaugeData] = React.useState({\n        g1: getRandomValue(80, 92),\n        g2: getRandomValue(5, 9),\n        g3: getRandomValue(20, 30),\n        g4: getRandomValue(4, 7),\n    })\n\n    const [statsData, setStatsData] = React.useState({\n        s1: getRandomInt(4000, 5000),\n        s2: getRandomInt(300, 400),\n        s3: getRandomInt(80, 92),\n        s4: getRandomInt(10, 20),\n        s5: getRandomInt(7, 37),\n        s6: getRandomInt(120, 160),\n        s7: getRandomInt(80, 92),\n        s8: getRandomInt(270, 600),\n        s9: getRandomInt(100, 200),\n        s10: getRandomInt(1300, 1500),\n    })\n\n    const [barData, setBarData] = useState({\n        b1LT: [25, 16, 20, 30],\n        b1Recent: [20, 14, 23, 35],\n\n        b2LT: [24, 40, 16, 10],\n        b2Recent: [20, 30, 25, 30],\n\n        b3LT: [18, 22, 30],\n        b3Recent: [15, 25, 37],\n\n        b4LT: [20, 40, 25],\n        b4Recent: [30, 50, 35],\n\n        b5LT: [120, 100, 80, 20, 20],\n        b5Recent: [271, 200, 178, 90, 88],\n\n    })\n\n\n    const handleGoClick = async () => {\n\n        setGaugeData({\n            g1: getRandomValue(80, 92),\n            g2: getRandomValue(5, 9),\n            g3: getRandomValue(20, 30),\n            g4: getRandomValue(4, 7),\n        })\n\n        setStatsData({\n            s1: getRandomInt(4000, 5000),\n            s2: getRandomInt(300, 400),\n            s3: getRandomInt(80, 92),\n            s4: getRandomInt(10, 20),\n            s5: getRandomInt(7, 37),\n            s6: getRandomInt(120, 160),\n            s7: getRandomInt(80, 92),\n            s8: getRandomInt(270, 600),\n            s9: getRandomInt(100, 200),\n            s10: getRandomInt(1300, 1500),\n        })\n\n        setBarData(prevState => ({\n            ...prevState,\n            b1Recent: prevState.b1Recent.map(x => x + getRandomInt(-1, 3)),\n            b1LT: prevState.b1LT.map(x => x + getRandomInt(-1, 3)),\n\n            b2Recent: prevState.b2Recent.map(x => x + getRandomInt(-1, 3)),\n            b2LT: prevState.b2LT.map(x => x + getRandomInt(-1, 3)),\n\n            b3Recent: prevState.b3Recent.map(x => x + getRandomInt(-1, 3)),\n            b3LT: prevState.b3LT.map(x => x + getRandomInt(-1, 3)),\n\n            b4Recent: prevState.b4Recent.map(x => x + getRandomInt(-1, 3)),\n            b4LT: prevState.b4LT.map(x => x + getRandomInt(-1, 3)),\n\n            b5Recent: prevState.b5Recent.map(x => x + getRandomInt(-1, 3)),\n            b5LT: prevState.b5LT.map(x => x + getRandomInt(-1, 3)),\n        }));\n\n\n    }\n\n\n    const Gauge1data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: gaugeData.g1, number: {suffix: \"%\"},\n            title: {text: \"Tested by RTRI\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    const Gauge2data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: gaugeData.g2, number: {suffix: \"%\"},\n            title: {text: \"RTRI Recent\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    const Gauge3data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: gaugeData.g3, number: {suffix: \"%\"},\n            title: {text: \"Reclassified Longterm\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    const Gauge4data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: gaugeData.g4, number: {suffix: \"%\"},\n            title: {text: \"RITA Recent\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n\n    function getBarData(recent, lt) {\n\n        if (radioValue === \"longTerm\") {\n            return {\n                lt: lt,\n                recent: []\n            }\n\n        } else if (radioValue === \"recent\") {\n            return {\n                lt: [],\n                recent: recent\n            }\n        } else {\n            return {\n                lt: lt,\n                recent: recent\n            }\n        }\n    }\n\n    // Site Location\n    const bySiteX = ['VCT Site1', 'VCT Site2', 'VCT Site3', 'VCT Site4']\n    const bySiteData = getBarData(barData.b1Recent, barData.b1LT)\n    const bySiteLTData = bySiteData.lt\n    const bySiteRecentData = bySiteData.recent\n\n\n    const bySiteLongTerm = {\n        x: bySiteX,\n        y: bySiteLTData,\n        type: 'bar',\n        text: bySiteLTData.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"LT\",\n        opacity: 0.5,\n        marker: {\n            color: 'rgb(158,202,225)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const bySiteRecent = {\n        x: bySiteX,\n        y: bySiteRecentData,\n        type: 'bar',\n        text: bySiteRecentData.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"Recent\",\n        marker: {\n            color: 'rgba(58,200,225,.5)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const BySiteBarData = [bySiteRecent, bySiteLongTerm];\n\n    const BySiteBarLayout = {\n        width: 380,\n        height: 380,\n        title: \"RTRI by Site\",\n        xaxis: {title: 'Hospitals'},\n        yaxis: {title: 'No of HIV Cases'}\n    };\n\n\n    // Age Group\n    const byAgeX = ['VCT Site1', 'VCT Site2', 'VCT Site3', 'VCT Site4']\n    const byAgeData = getBarData(barData.b2Recent, barData.b2LT)\n    const byAgeLTData = byAgeData.lt\n    const byAgeRecentData = byAgeData.recent\n\n\n    const byAgeLT = {\n        x: byAgeX,\n        y: byAgeLTData,\n        type: 'bar',\n        text: byAgeLTData.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"LT\",\n        opacity: 0.5,\n        marker: {\n            color: 'rgb(158,202,225)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const byAgeRecent = {\n        x: byAgeX,\n        y: byAgeRecentData,\n        type: 'bar',\n        text: byAgeRecentData.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"Recent\",\n        marker: {\n            color: 'rgba(58,200,225,.5)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const ByAgeBarData = [byAgeRecent, byAgeLT];\n\n    const ByAgeBarLayout = {\n        width: 450,\n        height: 350,\n        title: \"By Age Group\",\n        xaxis: {title: 'Age group'},\n        yaxis: {title: 'No of HIV Cases'}\n    };\n\n    // Gender\n    const byGenderX = ['Male', 'Female', 'Transgender']\n    const byGenderData = getBarData(barData.b3Recent, barData.b3LT)\n    const byGenderLTData = byGenderData.lt\n    const byGenderRecentData = byGenderData.recent\n\n\n    const byGenderLT = {\n        x: byGenderX,\n        y: byGenderLTData,\n        type: 'bar',\n        text: byGenderLTData.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"LT\",\n        opacity: 0.5,\n        marker: {\n            color: 'rgb(203,222,207)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const byGenderRecent = {\n        x: byGenderX,\n        y: byGenderRecentData,\n        type: 'bar',\n        text: byGenderRecentData.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"Recent\",\n        marker: {\n            color: 'rgb(134,226,114)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const BarByGenderData = [byGenderRecent, byGenderLT];\n\n    const BarByGenderLayout = {\n        width: 410,\n        height: 350,\n        title: \"By Gender\",\n        xaxis: {title: 'Gender'},\n        yaxis: {title: 'No of HIV Cases'}\n    };\n\n    // Marital Status\n    const byMStatusX = ['Single', 'Married', 'Divorced'];\n    const byMStatusData = getBarData(barData.b4Recent, barData.b4LT)\n\n    const byMStatusLTData = byMStatusData.lt\n    const byMStatusRecentData = byMStatusData.recent\n\n\n    const byMStatusLT = {\n        x: byMStatusX,\n        y: byMStatusLTData,\n        type: 'bar',\n        text: byMStatusLTData.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"LT\",\n        opacity: 0.5,\n        marker: {\n            color: 'rgb(211,206,219)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const byMStatusRecent = {\n        x: byMStatusX,\n        y: byMStatusRecentData,\n        type: 'bar',\n        text: byMStatusRecentData.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"Recent\",\n        marker: {\n            color: 'rgb(229,209,112)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const BarByMStatusData = [byMStatusRecent, byMStatusLT];\n\n    const BarByMStatusLayout = {\n        width: 420,\n        height: 350,\n        title: \"Marital Status\",\n        xaxis: {title: 'Marital Status'},\n        yaxis: {title: 'No of HIV Cases'}\n    };\n\n\n    // Pie Recent Infection\n    const Pie1Data = [{\n        values: [150, 200],\n        labels: ['Recent', 'Long-Term'],\n        type: 'pie'\n    }];\n\n    const Pie1Layout = {\n        width: 400,\n        height: 400,\n        title: 'RITA by Percentage'\n    };\n\n\n    const Pie2Data = [{\n        type: \"pie\",\n        values: [500000, 100000, 80000, 5000, 2000],\n        labels: ['Heterosexual', 'MSM/TG', 'Injection Drug Use', 'Blood Transfusion', 'Perinatal'],\n        textinfo: \"label+percent\",\n        textposition: \"outside\",\n        automargin: true\n    }]\n\n    const Pie2Layout = {\n        height: 350,\n        width: 450,\n        margin: {\"t\": 0, \"b\": 0, \"l\": 0, \"r\": 0},\n        showlegend: true,\n        title: \"Transmission Risk\"\n    }\n\n\n    //Table start\n    var tableValues = [\n        ['Heterosexual', 'Blood Transfusion', 'IDU', 'MSM/TG', 'Perinatal', '<b>TOTAL</b>'],\n        [500000, 5000, 80000, 100000, 2000, 689000]]\n\n    var tableData = [{\n        type: 'table',\n        header: {\n            values: [[\"<b>Risk</b>\"], [\"<b>HIV Transmission</b>\"]],\n            align: [\"left\", \"center\"],\n            line: {width: 1, color: '#506784'},\n            fill: {color: '#119DFF'},\n            font: {family: \"Arial\", size: 16, color: \"white\"}\n        },\n        cells: {\n            values: tableValues,\n            align: [\"left\", \"center\"],\n            line: {color: \"#506784\", width: 1},\n            fill: {color: ['#25FEFD', 'white']},\n            font: {family: \"Arial\", size: 14, color: [\"#506784\"]}\n        }\n    }]\n\n    const tableLayout = {\n        height: 350,\n        width: 430,\n        margin: {\"t\": 100, \"b\": 0, \"l\": 0, \"r\": 0},\n        showlegend: true,\n        title: \"Risk Table\"\n    }\n\n\n    //HIV Partner Test\n\n    const byPartnerTestX = ['Contacted', 'Tested', 'HIV +ve', 'Recency +ve', 'On ART'];\n    const byPartnerData = getBarData(barData.b5Recent, barData.b5LT)\n    const byPartnerTestLTData = byPartnerData.lt\n    const byPartnerTestRecentData = byPartnerData.recent\n\n    const byPartnerTestLT = {\n        x: byPartnerTestX,\n        y: byPartnerTestLTData,\n        type: 'bar',\n        text: byPartnerTestLTData.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"LT\",\n        opacity: 0.5,\n        marker: {\n            color: 'rgb(226,184,177)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const byPartnerTestRecent = {\n        x: byPartnerTestX,\n        y: byPartnerTestRecentData,\n        type: 'bar',\n        text: byPartnerTestRecentData.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"Recent\",\n        marker: {\n            color: 'rgb(212,72,67)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const BarByPartnerTestData = [byPartnerTestRecent, byPartnerTestLT];\n\n    const BarByPartnerTestLayout = {\n        width: 480,\n        height: 350,\n        title: \"HIV Partner Test\",\n        xaxis: {title: 'HIV Recency'},\n        yaxis: {title: \"Index Client's Partner\"}\n    };\n\n\n    //Map start\n    const [data, setData] = useState({\n        pointedLocation: null,\n        count: 0,\n        focusedLocation: null,\n        selectedLocations: [],\n        tooltipStyle: {\n            display: 'none'\n        }\n    });\n\n    const [locationCount, setLocationCount] = useState([\n        {location: \"Bang Phlat\", count: 10},\n        {location: \"Huai Khwang\", count: 20},\n        {location: \"Wang Thong Lang\", count: 30},\n        {location: \"Thawi Watthana\", count: 40},\n        {location: \"Din Daeng\", count: 50},\n        {location: \"Dusit\", count: 60},\n        {location: \"Ratchathewi\", count: 70},\n        {location: \"Vadhana\", count: 80},\n        {location: \"Thon buri\", count: 90},\n        {location: \"Sathon\", count: 20},\n        {location: \"Bang Na\", count: 30},\n        {location: \"Don Mueang\", count: 200},\n        {location: \"Bang Kapi\", count: 20},\n        {location: \"Lat Phrao\", count: 20},\n\n    ]);\n\n    const countArray = locationCount.flatMap(x => [x.count])\n    const median = calculateMedian(countArray)\n\n\n    const handleLocationMouseOver = (e) => {\n        const thaiLocation = getLocationName(e);\n        const englishLocation = getLocationId(e);\n\n        const locationRow = locationCount.find(element => element.location === englishLocation);\n        if (locationRow !== undefined && locationRow.count > 0) {\n            setData(prevState => ({\n                ...prevState,\n                count: locationRow.count\n            }));\n        } else {\n            setData(prevState => ({\n                ...prevState,\n                count: 0\n            }));\n        }\n        setData(prevState => ({\n            ...prevState,\n            pointedLocation: thaiLocation + \"  -  \" + englishLocation\n        }));\n    };\n\n\n    const handleLocationMouseOut = () => {\n        setData(prevState => ({\n            ...prevState,\n            pointedLocation: null,\n            tooltipStyle: {display: 'none'},\n        }));\n\n    }\n\n    const handleLocationMouseMove = (event) => {\n        const tooltipStyle = {\n            display: 'block',\n            top: event.clientY + 10,\n            left: event.clientX - 100\n        };\n\n        setData(prevState => ({\n            ...prevState,\n            tooltipStyle: tooltipStyle,\n        }));\n    }\n\n\n    const getLocationClassName = (mapLocation, _) => {\n\n        const locationRow = locationCount.find(element => element.location === mapLocation.id);\n        let strengthClass = \"color-strength1\"\n\n        if (locationRow !== undefined && locationRow.count > 0) {\n            if (locationRow.count < median) {\n                strengthClass = \"color-strength2\"\n            } else {\n                strengthClass = \"color-strength3\"\n            }\n\n        }\n        return `svg-map ${strengthClass}`\n\n    }\n    //Map end\n\n\n    return (\n        <Grid container className={classes.mainContainer} direction={\"column\"}>\n            <Grid item>\n                <Toolbar startDate={startDate}\n                         setStartDate={setStartDate}\n                         endDate={endDate}\n                         setEndDate={setEndDate}\n                         radioValue={radioValue}\n                         setRadioValue={setRadioValue}\n                         handleGoClick={handleGoClick}/>\n            </Grid>\n            <Grid item className={classes.maingrid1}>\n                <Grid container direction={\"row\"}>\n                    <Grid item>\n                        <Grid container direction={\"column\"}>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            {statsData.s1}\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            Total Test\n                                        </Typography>\n\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            {statsData.s2}\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            New HIV +ve\n                                            <br/>\n\n                                        </Typography>\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            <br/>\n                                            {statsData.s3}\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            Tested by RTRI\n                                        </Typography>\n\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            {statsData.s4}\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            RTRI Recent\n                                            <br/>\n\n                                        </Typography>\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            <br/>\n                                            {statsData.s5}\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            RTRI Longterm\n                                        </Typography>\n\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            {statsData.s6}\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            VL Result Complete\n                                            <br/>\n\n                                        </Typography>\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            <br/>\n                                            {statsData.s7}\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            Reclassified Longterm\n                                        </Typography>\n\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            {statsData.s8}\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            RITA Recent\n                                            <br/>\n\n                                        </Typography>\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            <br/>\n                                            {statsData.s9}\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            RITA Longterm\n                                        </Typography>\n\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <Grid container direction={\"column\"}>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            {statsData.s10}\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            Total HIV +ve\n                                        </Typography>\n\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge1data}\n                                            layout={{\n                                                width: 300, height: 180, margin: {t: 0, b: 0},\n                                                paper_bgcolor: \"#eaeaea\"\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar: false, staticPlot: false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge2data}\n                                            layout={{\n                                                width: 300, height: 180, margin: {t: 0, b: 0},\n                                                paper_bgcolor: \"#eaeaea\"\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar: false, staticPlot: false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge3data}\n                                            layout={{\n                                                width: 300, height: 180, margin: {t: 0, b: 0},\n                                                paper_bgcolor: \"#eaeaea\"\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar: false, staticPlot: false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge4data}\n                                            layout={{\n                                                width: 300, height: 180, margin: {t: 0, b: 0},\n                                                paper_bgcolor: \"#eaeaea\"\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar: false, staticPlot: false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <Grid container direction={\"column\"}>\n                            <Grid item>\n                                <Grid container>\n                                    <Grid item>\n                                        <Card className={classes.root} variant=\"outlined\">\n                                            <CardContent>\n\n                                                <Plot\n                                                    data={BySiteBarData}\n                                                    layout={BySiteBarLayout}\n\n                                                    // To disable trace\n                                                    config={{displayModeBar: false, staticPlot: false}}\n                                                />\n                                            </CardContent>\n                                        </Card>\n                                    </Grid>\n                                    <Grid item>\n                                        <Card className={classes.root} variant=\"outlined\">\n                                            <CardContent>\n\n                                                <Plot\n                                                    data={Pie1Data}\n                                                    layout={Pie1Layout}\n\n                                                    // To disable trace\n                                                    config={{displayModeBar: false, staticPlot: false}}\n                                                />\n                                            </CardContent>\n                                        </Card>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <Grid container direction={\"row\"} style={{margin:\"0 2em\"}}>\n                                    <Grid item style={{width:\"67%\"}}>\n                                        <p className={classes.title}>Hotspot Locations</p>\n                                        <SVGMap\n                                            map={BangkokSVG}\n                                            locationClassName={getLocationClassName}\n                                            onLocationMouseOver={handleLocationMouseOver}\n                                            onLocationMouseOut={handleLocationMouseOut}\n                                            onLocationMouseMove={handleLocationMouseMove}\n\n                                        />\n                                        <div className=\"svg-map-tooltip\" style={data.tooltipStyle}>\n                                            <div>Location:{data.pointedLocation}</div>\n                                            <div>Count:{data.count}</div>\n                                        </div>\n                                    </Grid>\n                                    <Grid item style={{margin:\"0 4em 0 5em\", height: '10em'}}>\n                                        <Grid container style={{margin:\"20em 0 0 0\"}} alignItems={\"center\"}>\n                                            <Grid item>\n                                                <Avatar variant=\"square\" style={{backgroundColor:\"#fdcc8a\",width:\"30px\", height:\"30px\"}}>\n                                                    {``}\n                                                </Avatar>\n                                            </Grid>\n                                            <Grid item>\n                                                <p style={{marginLeft:\"1em\"}}>Low</p>\n                                            </Grid>\n                                        </Grid>\n\n                                        <Grid container alignItems={\"center\"}>\n                                            <Grid item>\n                                                <Avatar variant=\"square\" style={{backgroundColor:\"#e34a33\",width:\"30px\", height:\"30px\"}}>\n                                                    {``}\n                                                </Avatar>\n                                            </Grid>\n                                            <Grid item>\n                                                <p style={{marginLeft:\"1em\"}}>Medium</p>\n                                            </Grid>\n                                        </Grid>\n\n                                        <Grid container alignItems={\"center\"}>\n                                            <Grid item>\n                                                <Avatar variant=\"square\" style={{backgroundColor:\"#b30000\", width:\"30px\", height:\"30px\"}}>\n                                                    {``}\n                                                </Avatar>\n                                            </Grid>\n                                            <Grid item>\n                                                <p style={{marginLeft:\"1em\"}}>High</p>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n\n            <Grid item style={{marginTop: \"2em\"}}>\n                <Grid container >\n                    <Grid item>\n                        <Card className={classes.root} variant=\"outlined\">\n                            <CardContent>\n\n                                <Plot\n                                    data={ByAgeBarData}\n                                    layout={ByAgeBarLayout}\n\n                                    // To disable trace\n                                    config={{displayModeBar: false, staticPlot: false}}\n                                />\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item>\n                        <Card className={classes.root} variant=\"outlined\">\n                            <CardContent>\n\n                                <Plot\n                                    data={Pie2Data}\n                                    layout={Pie2Layout}\n\n                                    // To disable trace\n                                    config={{displayModeBar: false, staticPlot: false}}\n                                />\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item>\n                        <Card className={classes.root} variant=\"outlined\">\n                            <CardContent>\n                                <Plot\n                                    data={BarByMStatusData}\n                                    layout={BarByMStatusLayout}\n\n                                    // To disable trace\n                                    config={{displayModeBar: false, staticPlot: false}}\n                                />\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </Grid>\n\n            <Grid item style={{marginTop: \"2em\"}}>\n                <Grid container >\n                    <Grid item>\n                        <Card className={classes.root} variant=\"outlined\">\n                            <CardContent>\n\n                                <Plot\n                                    data={BarByGenderData}\n                                    layout={BarByGenderLayout}\n\n                                    // To disable trace\n                                    config={{displayModeBar: false, staticPlot: false}}\n                                />\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item>\n                        <Card className={classes.root} variant=\"outlined\">\n                            <CardContent>\n\n                                <Plot\n                                    data={tableData}\n                                    layout={tableLayout}\n\n                                    // To disable trace\n                                    config={{displayModeBar: false, staticPlot: false}}\n                                />\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item>\n                        <Card className={classes.root} variant=\"outlined\">\n                            <CardContent>\n\n                                <Plot\n                                    data={BarByPartnerTestData}\n                                    layout={BarByPartnerTestLayout}\n\n                                    // To disable trace\n                                    config={{displayModeBar: false, staticPlot: false}}\n                                />\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </Grid>\n\n        </Grid>\n\n    );\n}\n\n// Map function for median\nfunction getLocationName(event) {\n    return event.target.attributes.name.value;\n}\n\nfunction getLocationId(event) {\n    return event.target.id;\n}\n\nfunction calculateMedian(values) {\n    if (values.length === 0) return 0;\n\n    values.sort(function (a, b) {\n        return a - b;\n    });\n\n    const half = Math.floor(values.length / 2);\n\n    if (values.length % 2)\n        return values[half];\n\n    return (values[half - 1] + values[half]) / 2.0;\n}\n\n// Map function\nDate.prototype.yyyymmdd = function () {\n    const mm = this.getMonth() + 1; // getMonth() is zero-based\n    const dd = this.getDate();\n\n    return [this.getFullYear(), \"-\",\n        (mm > 9 ? '' : '0') + mm, \"-\",\n        (dd > 9 ? '' : '0') + dd\n    ].join('');\n};\n\nfunction getRandomValue(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return (Math.random() * (max - min) + min)\n}\n\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\n","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/maritalstatus.js",[],"/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/risk.js",[],"/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/gender.js",[],"/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/pages/report.js",["88","89","90","91","92"],"import React from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport VerticalMenu from \"../components/sidemenu\";\nimport DateSelection from \"../components/dateselection\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Plot from \"react-plotly.js\";\n\nconst useStyles = makeStyles(theme => ({\n    mainContainer: {\n        padding: 0,\n        margin: 0\n    },\n    sideMenu: {\n        display: \"inline-block\",\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"300px\",\n        backgroundColor: '#1f5f8b'\n    },\n    sideMenu2: {\n    },\n    item: {\n        marginLeft: 350\n    },\n    itemHeading: {\n        marginLeft: 350,\n        marginTop: 20,\n        borderBottom: \"3px solid #cdd0cb\",\n        width: \"80%\"\n    },\n    text: {\n        marginTop: 30,\n        marginBottom: 50,\n        fontWeight: \"200\"\n    },\n    root: {\n        minWidth: 250,\n        marginRight: 50\n    },\n    pos: {\n        fontSize: 20,\n        height: 170\n    },\n    h4: {\n        color: \"#3f72af\",\n    },\n\n}))\n\nexport default function Report() {\n\n    const classes = useStyles();\n\n    const Gauge1data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: 90.1, number: {suffix: \"%\"},\n            title: {text: \"Tested by RTRI\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    const Gauge2data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: 30.4, number: {suffix: \"%\"},\n            title: {text: \"RTRI Recent\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    const Gauge3data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: 5, number: {suffix: \"%\"},\n            title: {text: \"RITA Recent\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    return (\n\n        <Grid container className={classes.mainContainer}>\n            <Grid item className={classes.sideMenu}>\n                <VerticalMenu></VerticalMenu>\n            </Grid>\n            <Grid item>\n                <Grid container className={classes.sideMenu2} direction={\"column\"}>\n                    <Grid item className={classes.itemHeading}>\n                        <Typography variant={'h6'}>\n                            Overall Testing\n                        </Typography>\n                    </Grid>\n                    <Grid item className={classes.item}>\n                        <Grid container className={classes.text} >\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n\n                                            318\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Newly Diagnosed HIV +ve\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            310\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Tested by RTRI\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge1data}\n                                            layout={{width: 320, height: 220, margin: { t: 0, b: 0 },  paper_bgcolor: \"lavender\",\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar:false,staticPlot:false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item className={classes.itemHeading}>\n                        <Typography variant={'h6'}>\n                            Rapid Test for Recent Infection [RTRI] Result\n                        </Typography>\n                    </Grid>\n                    <Grid item className={classes.item}>\n                        <Grid container className={classes.text}>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n\n                                            70\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            RTRI Recent\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            240\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Longterm\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge2data}\n                                            layout={{width: 320, height: 220, margin: { t: 0, b: 0 },  paper_bgcolor: \"lavender\",\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar:false,staticPlot:false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item className={classes.itemHeading}>\n                        <Typography variant={'h6'}>\n                            Viral Load Test Results\n                        </Typography>\n                    </Grid>\n                    <Grid item className={classes.item}>\n                        <Grid container className={classes.text}>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n\n                                            65\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            VL Result Complete\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            5\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Reclassified Longterm\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge3data}\n                                            layout={{width: 320, height: 220, margin: { t: 0, b: 0 },  paper_bgcolor: \"lavender\",\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar:false,staticPlot:false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item className={classes.itemHeading}>\n                    <Typography variant={'h6'}>\n                        Recent Infection Testing Algorithm [RITA] Result\n                    </Typography>\n\n                    </Grid>\n                    <Grid item className={classes.item}>\n                        <Grid container className={classes.text}>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n\n                                            62\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            RITA Recent\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            3\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Longterm\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge3data}\n                                            layout={{width: 320, height: 220, margin: { t: 0, b: 0 },  paper_bgcolor: \"lavender\",\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar:false,staticPlot:false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/partnerhiv.js",[],"/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/overview.js",["93","94","95","96","97"],"import React from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport VerticalMenu from \"../components/sidemenu\";\nimport DateSelection from \"../components/dateselection\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Plot from \"react-plotly.js\";\n\nconst useStyles = makeStyles(theme => ({\n    mainContainer: {\n        padding: 0,\n        margin: 0\n    },\n    sideMenu: {\n        display: \"inline-block\",\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"300px\",\n        backgroundColor: '#1f5f8b'\n    },\n    sideMenu2: {\n    },\n    item: {\n        marginLeft: 350\n    },\n    itemHeading: {\n        marginLeft: 350,\n        marginTop: 20,\n        borderBottom: \"3px solid #cdd0cb\",\n        width: \"80%\"\n    },\n    text: {\n        marginTop: 30,\n        marginBottom: 50,\n        fontWeight: \"200\"\n    },\n    root: {\n        minWidth: 250,\n        marginRight: 50\n    },\n    pos: {\n        fontSize: 20,\n        height: 170\n    },\n    h4: {\n        color: \"#3f72af\",\n    },\n\n}))\n\nexport default function Report() {\n\n    const classes = useStyles();\n\n    const Gauge1data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: 90.1, number: {suffix: \"%\"},\n            title: {text: \"Tested by RTRI\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    const Gauge2data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: 30.4, number: {suffix: \"%\"},\n            title: {text: \"RTRI Recent\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    const Gauge3data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: 5, number: {suffix: \"%\"},\n            title: {text: \"RITA Recent\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    return (\n\n        <Grid container className={classes.mainContainer}>\n            <Grid item className={classes.sideMenu}>\n                <VerticalMenu></VerticalMenu>\n            </Grid>\n            <Grid item>\n                <Grid container className={classes.sideMenu2} direction={\"column\"}>\n                    <Grid item className={classes.itemHeading}>\n                        <Typography variant={'h6'}>\n                            Overall Testing\n                        </Typography>\n                    </Grid>\n                    <Grid item className={classes.item}>\n                        <Grid container className={classes.text} >\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n\n                                            318\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Newly Diagnosed HIV +ve\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            310\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Tested by RTRI\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge1data}\n                                            layout={{width: 320, height: 220, margin: { t: 0, b: 0 },  paper_bgcolor: \"lavender\",\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar:false,staticPlot:false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item className={classes.itemHeading}>\n                        <Typography variant={'h6'}>\n                            Rapid Test for Recent Infection [RTRI] Result\n                        </Typography>\n                    </Grid>\n                    <Grid item className={classes.item}>\n                        <Grid container className={classes.text}>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n\n                                            70\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            RTRI Recent\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            240\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Longterm\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge2data}\n                                            layout={{width: 320, height: 220, margin: { t: 0, b: 0 },  paper_bgcolor: \"lavender\",\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar:false,staticPlot:false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item className={classes.itemHeading}>\n                        <Typography variant={'h6'}>\n                            Viral Load Test Results\n                        </Typography>\n                    </Grid>\n                    <Grid item className={classes.item}>\n                        <Grid container className={classes.text}>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n\n                                            65\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            VL Result Complete\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            5\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Reclassified Longterm\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge3data}\n                                            layout={{width: 320, height: 220, margin: { t: 0, b: 0 },  paper_bgcolor: \"lavender\",\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar:false,staticPlot:false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item className={classes.itemHeading}>\n                        <Typography variant={'h6'}>\n                            Recent Infection Testing Algorithm [RITA] Result\n                        </Typography>\n\n                    </Grid>\n                    <Grid item className={classes.item}>\n                        <Grid container className={classes.text}>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n\n                                            62\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            RITA Recent\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            3\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Longterm\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge3data}\n                                            layout={{width: 320, height: 220, margin: { t: 0, b: 0 },  paper_bgcolor: \"lavender\",\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar:false,staticPlot:false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/components/sidemenu.js",["98","99","100"],"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\n\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        height: '100%',\n        // backgroundColor: '#364f6b','#5588a3'\n        backgroundColor: '#1f5f8b',\n        color: 'white',\n        display: 'inline-block',\n        fontSize:20,\n        listItemText:{\n            fontSize:'5em',//Insert your required size\n        }\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n}));\n\nexport default function VerticalMenu() {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n\n\n    const [openRecency, setOpenRecency] = React.useState(true);\n\n\n    const handleRecencyClick = () => {\n        setOpenRecency(!openRecency);\n    };\n\n    return (\n        <List component=\"nav\" className={classes.root}>\n\n            <ListItem button onClick={handleRecencyClick}>\n                <ListItemIcon>\n                    <AssessmentIcon style={{color: '#fff'}}/>\n                </ListItemIcon>\n                <ListItemText primary=\"Recency Report\"/>\n                {openRecency ? <ExpandLess/> : <ExpandMore/>}\n            </ListItem>\n\n            <Collapse in={openRecency} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    <ListItem button component=\"a\" href=\"/overview\" className={classes.nested}>\n                        <ListItemIcon>\n                            <PlayArrowIcon style={{color: '#fff'}}/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Overview\"/>\n                    </ListItem>\n\n                </List>\n            </Collapse>\n\n\n            <ListItem button onClick={{}}>\n                <ListItemIcon>\n                    <AssessmentIcon style={{color: '#fff'}}/>\n                </ListItemIcon>\n                <ListItemText primary=\"Demographic\"/>\n                {open ? <ExpandLess/> : <ExpandMore/>}\n            </ListItem>\n\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    <ListItem button component=\"a\" href=\"/by-gender\" className={classes.nested}>\n                        <ListItemIcon>\n                            <PlayArrowIcon style={{color: '#fff'}}/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"By Gender\"/>\n                    </ListItem>\n                    <ListItem button component=\"a\" href=\"/by-status\" className={classes.nested}>\n                        <ListItemIcon>\n                            <PlayArrowIcon style={{color: '#fff'}}/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"By Marital status\"/>\n                    </ListItem>\n                    <ListItem button component=\"a\" href=\"/by-age\" className={classes.nested}>\n                        <ListItemIcon>\n                            <PlayArrowIcon style={{color: '#fff'}}/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"By Age\"/>\n                    </ListItem>\n                </List>\n            </Collapse>\n\n\n            <ListItem button onClick={{}}>\n                <ListItemIcon>\n                    <AssessmentIcon style={{color: '#fff'}}/>\n                </ListItemIcon>\n                <ListItemText primary=\"Behaviour\"/>\n                {open ? <ExpandLess/> : <ExpandMore/>}\n            </ListItem>\n\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    <ListItem button component=\"a\" href=\"/by-risk\" className={classes.nested}>\n                        <ListItemIcon>\n                            <PlayArrowIcon style={{color: '#fff'}}/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"By Transmission Risk\"/>\n                    </ListItem>\n\n                </List>\n            </Collapse>\n\n            <ListItem button onClick={{}}>\n                <ListItemIcon>\n                    <AssessmentIcon style={{color: '#fff'}}/>\n                </ListItemIcon>\n                <ListItemText primary=\"Geographic\"/>\n                {open ? <ExpandLess/> : <ExpandMore/>}\n            </ListItem>\n\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    <ListItem button className={classes.nested}>\n                        <ListItemIcon>\n                            <PlayArrowIcon style={{color: '#fff'}}/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"By Area\"/>\n                    </ListItem>\n                    <ListItem button component=\"a\" href=\"/by-site\" className={classes.nested}>\n                        <ListItemIcon>\n                            <PlayArrowIcon style={{color: '#fff'}}/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"By Testing Site\"/>\n                    </ListItem>\n                </List>\n            </Collapse>\n\n            <ListItem button onClick={{}}>\n                <ListItemIcon>\n                    <AssessmentIcon style={{color: '#fff'}}/>\n                </ListItemIcon>\n                <ListItemText primary=\"Partner Test\"/>\n                {open ? <ExpandLess/> : <ExpandMore/>}\n            </ListItem>\n\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    <ListItem button component=\"a\" href=\"/by-outcome\" className={classes.nested}>\n                        <ListItemIcon>\n                            <PlayArrowIcon style={{color: '#fff'}}/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"HIV Test Outcome\"/>\n                    </ListItem>\n                </List>\n            </Collapse>\n\n        </List>\n    );\n}","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/components/dateselection.js",["101"],"import 'date-fns';\nimport React, {useState} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nexport default function DateSelection(props) {\n\n    const handleStartDateChange = (date) => {\n        props.setStartDate(date);\n    };\n\n    const handleEndDateChange = (date) => {\n        props.setEndDate(date);\n    };\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container >\n                <Grid item style={{marginRight:\"1em\"}}>\n                    <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"yyyy-MM-dd\"\n                        margin=\"normal\"\n                        id=\"date-picker-inline\"\n                        label=\"Start Date\"\n                        value={props.startDate}\n                        onChange={handleStartDateChange}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    />\n                </Grid>\n\n                <Grid item>\n                    <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"yyyy-MM-dd\"\n                        margin=\"normal\"\n                        label=\"End Date\"\n                        value={props.endDate}\n                        onChange={handleEndDateChange}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    />\n                </Grid>\n\n\n            </Grid>\n        </MuiPickersUtilsProvider>\n    );\n}\n","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/components/bangkokmap.js",[],"/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/components/header.js",["102"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport logo from \"../images/hivlogo.svg\"\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    toolbar: {\n        backgroundColor: \"#3f72af\"\n        // backgroundColor: \"#253b6e\"\n    },\n    title: {\n        flexGrow: 1\n    },\n    icon: {\n        width:50,\n        height:50\n    },\n}));\n\nexport default function ButtonAppBar() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar className={classes.toolbar} >\n\n                    <Typography variant={\"h4\"} className={classes.title}>\n                        Bangkok HIV Epidemic Analysis\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/pages/home.js",[],"/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/age.js",[],"/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/reportpages/site.js",[],"/Users/sylviachadha/Desktop/Tools/WebStorm/muhivproject/src/components/toolbar.js",["103","104"],"import React, {useState} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Button, Grid} from \"@material-ui/core\";\nimport DateSelection from \"../components/dateselection\";\nimport {Typography} from \"@material-ui/core\";\n\n\nimport FormControl from \"@material-ui/core/FormControl\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\n\n\nconst useStyles = makeStyles(theme => ({\n    toolbar: {\n        padding: \".2em 0 .7em 0\",\n        margin: 0,\n        backgroundColor: '#e8eae6'\n    },\n    mainContainer2: {\n        padding: 0,\n        margin: 0\n    },\n    Typo: {},\n    button: {\n        color: 'yellow'\n    },\n}))\n\nexport default function Toolbar(props) {\n\n\n    const handleRadioChange = (event) => {\n        props.setRadioValue(event.target.value);\n    };\n\n\n    const classes = useStyles();\n\n\n    return (\n        <Grid container className={classes.toolbar} alignItems={\"center\"} direction={\"row\"} xs={12}>\n            <Grid item xs={7}>\n                <Grid container alignItems={\"center\"} justify={\"space-around\"}>\n                    <Grid item>\n                        <Typography className={classes.Typo}  variant=\"h5\">\n                            Select Date\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <DateSelection\n                            startDate={props.startDate}\n                            setStartDate={props.setStartDate}\n                            endDate={props.endDate}\n                            setEndDate={props.setEndDate}\n                        >\n                        </DateSelection>\n                    </Grid>\n\n                    <Grid item className={classes.button}>\n                        <Button variant=\"contained\" onClick={props.handleGoClick}>\n                            Go\n                        </Button>\n                    </Grid>\n\n                </Grid>\n            </Grid>\n            <Grid item xs={5}>\n                <FormControl component=\"fieldset\">\n                    <RadioGroup row value={props.radioValue} onChange={handleRadioChange}>\n                        <FormControlLabel value=\"recent\" control={<Radio color=\"primary\"/>} label=\"Recent\"/>\n                        <FormControlLabel value=\"longTerm\" control={<Radio color=\"primary\"/>} label=\"LongTerm\"/>\n                        <FormControlLabel value=\"all\" control={<Radio color=\"primary\"/>} label=\"All\"/>\n                    </RadioGroup>\n                </FormControl>\n            </Grid>\n\n        </Grid>\n    );\n}\n\nDate.prototype.yyyymmdd = function () {\n    const mm = this.getMonth() + 1; // getMonth() is zero-based\n    const dd = this.getDate();\n\n    return [this.getFullYear(), \"-\",\n        (mm > 9 ? '' : '0') + mm, \"-\",\n        (dd > 9 ? '' : '0') + dd\n    ].join('');\n};\n",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":46,"column":11,"nodeType":"111","messageId":"112","endLine":46,"endColumn":28},{"ruleId":"109","severity":1,"message":"113","line":50,"column":11,"nodeType":"111","messageId":"112","endLine":50,"endColumn":15},{"ruleId":"109","severity":1,"message":"114","line":549,"column":27,"nodeType":"111","messageId":"112","endLine":549,"endColumn":43},{"ruleId":"115","severity":1,"message":"116","line":1071,"column":1,"nodeType":"117","messageId":"118","endLine":1079,"endColumn":2},{"ruleId":"109","severity":1,"message":"119","line":5,"column":8,"nodeType":"111","messageId":"112","endLine":5,"endColumn":21},{"ruleId":"109","severity":1,"message":"120","line":6,"column":8,"nodeType":"111","messageId":"112","endLine":6,"endColumn":15},{"ruleId":"109","severity":1,"message":"121","line":8,"column":8,"nodeType":"111","messageId":"112","endLine":8,"endColumn":14},{"ruleId":"109","severity":1,"message":"122","line":10,"column":8,"nodeType":"111","messageId":"112","endLine":10,"endColumn":19},{"ruleId":"109","severity":1,"message":"123","line":12,"column":8,"nodeType":"111","messageId":"112","endLine":12,"endColumn":14},{"ruleId":"109","severity":1,"message":"119","line":5,"column":8,"nodeType":"111","messageId":"112","endLine":5,"endColumn":21},{"ruleId":"109","severity":1,"message":"120","line":6,"column":8,"nodeType":"111","messageId":"112","endLine":6,"endColumn":15},{"ruleId":"109","severity":1,"message":"121","line":8,"column":8,"nodeType":"111","messageId":"112","endLine":8,"endColumn":14},{"ruleId":"109","severity":1,"message":"122","line":10,"column":8,"nodeType":"111","messageId":"112","endLine":10,"endColumn":19},{"ruleId":"109","severity":1,"message":"123","line":12,"column":8,"nodeType":"111","messageId":"112","endLine":12,"endColumn":14},{"ruleId":"109","severity":1,"message":"124","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":21},{"ruleId":"109","severity":1,"message":"125","line":12,"column":8,"nodeType":"111","messageId":"112","endLine":12,"endColumn":18},{"ruleId":"109","severity":1,"message":"126","line":37,"column":18,"nodeType":"111","messageId":"112","endLine":37,"endColumn":25},{"ruleId":"109","severity":1,"message":"127","line":2,"column":16,"nodeType":"111","messageId":"112","endLine":2,"endColumn":24},{"ruleId":"109","severity":1,"message":"128","line":6,"column":8,"nodeType":"111","messageId":"112","endLine":6,"endColumn":12},{"ruleId":"109","severity":1,"message":"127","line":1,"column":16,"nodeType":"111","messageId":"112","endLine":1,"endColumn":24},{"ruleId":"115","severity":1,"message":"116","line":82,"column":1,"nodeType":"117","messageId":"118","endLine":90,"endColumn":2},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'viridisColorscale' is assigned a value but never used.","Identifier","unusedVar","'bull' is assigned a value but never used.","'setLocationCount' is assigned a value but never used.","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","unexpected","'DateSelection' is defined but never used.","'Toolbar' is defined but never used.","'AppBar' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'ListSubheader' is defined but never used.","'StarBorder' is defined but never used.","'setOpen' is assigned a value but never used.","'useState' is defined but never used.","'logo' is defined but never used.","no-global-assign","no-unsafe-negation"]