[{"/Users/sylviachadha/WebstormProjects/muhivproject/src/index.js":"1","/Users/sylviachadha/WebstormProjects/muhivproject/src/reportWebVitals.js":"2","/Users/sylviachadha/WebstormProjects/muhivproject/src/main/App.js":"3","/Users/sylviachadha/WebstormProjects/muhivproject/src/pages/home.js":"4","/Users/sylviachadha/WebstormProjects/muhivproject/src/components/header.js":"5","/Users/sylviachadha/WebstormProjects/muhivproject/src/pages/dashboard.js":"6","/Users/sylviachadha/WebstormProjects/muhivproject/src/components/bangkokmap.js":"7","/Users/sylviachadha/WebstormProjects/muhivproject/src/pages/report.js":"8","/Users/sylviachadha/WebstormProjects/muhivproject/src/components/sidemenu.js":"9","/Users/sylviachadha/WebstormProjects/muhivproject/src/reportpages/overview.js":"10","/Users/sylviachadha/WebstormProjects/muhivproject/src/components/dateselection.js":"11","/Users/sylviachadha/WebstormProjects/muhivproject/src/reportpages/gender.js":"12","/Users/sylviachadha/WebstormProjects/muhivproject/src/reportpages/maritalstatus.js":"13","/Users/sylviachadha/WebstormProjects/muhivproject/src/reportpages/risk.js":"14","/Users/sylviachadha/WebstormProjects/muhivproject/src/reportpages/partnerhiv.js":"15"},{"size":505,"mtime":1610433436079,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1610430708901,"results":"18","hashOfConfig":"17"},{"size":1940,"mtime":1610655543056,"results":"19","hashOfConfig":"17"},{"size":7152,"mtime":1610567222267,"results":"20","hashOfConfig":"17"},{"size":1076,"mtime":1610604799933,"results":"21","hashOfConfig":"17"},{"size":26542,"mtime":1610615153838,"results":"22","hashOfConfig":"17"},{"size":1439547,"mtime":1610584034520,"results":"23","hashOfConfig":"17"},{"size":14235,"mtime":1610626699699,"results":"24","hashOfConfig":"17"},{"size":6542,"mtime":1610605058159,"results":"25","hashOfConfig":"17"},{"size":14247,"mtime":1610626829691,"results":"26","hashOfConfig":"17"},{"size":1624,"mtime":1610606073646,"results":"27","hashOfConfig":"17"},{"size":4612,"mtime":1610647719983,"results":"28","hashOfConfig":"17"},{"size":4642,"mtime":1610647548052,"results":"29","hashOfConfig":"17"},{"size":3188,"mtime":1610654020231,"results":"30","hashOfConfig":"17"},{"size":3199,"mtime":1610655543052,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"g48ba6",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"34"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/sylviachadha/WebstormProjects/muhivproject/src/index.js",[],["72","73"],"/Users/sylviachadha/WebstormProjects/muhivproject/src/reportWebVitals.js",[],"/Users/sylviachadha/WebstormProjects/muhivproject/src/main/App.js",[],"/Users/sylviachadha/WebstormProjects/muhivproject/src/pages/home.js",["74"],"import React from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Typography} from \"@material-ui/core\";\nimport dbimage from \"../images/DB.svg\"\nimport rpimage from \"../images/Rep.svg\"\nimport model from \"../images/model.svg\"\nimport Box from \"@material-ui/core/Box\";\n\n\nconst useStyles = makeStyles(theme => ({\n    mainContainer: {\n        padding: 0,\n        margin: 0\n    },\n    grid1: {\n        padding: 10,\n        backgroundColor: \"#eaeaea\",\n    },\n    grid2: {\n        padding: 30,\n        backgroundColor: \"white\",\n        borderBottom: '5px solid white',\n        // justifyContent: \"flex-end\"\n    },\n    grid3: {\n        padding: 30,\n        backgroundColor: \"white\",\n        borderBottom: '5px solid white',\n    },\n    grid4: {\n        padding: 30,\n        backgroundColor: \"white\",\n        borderBottom: '5px solid white',\n    },\n    griditem1: {\n        marginLeft: 300,\n        marginRight: 50,\n        backgroundColor: \"#white\",\n    },\n    griditem2: {\n        padding: 10,\n        backgroundColor: \"white\",\n        marginLeft: 30,\n    },\n    griditem3: {\n        marginLeft: 300,\n        marginRight: 50,\n        backgroundColor: \"white\",\n\n    },\n    h4:{\n      paddingLeft:\"0.5em\"\n    },\n    leftContent: {\n      borderRight : \".5em solid white\"\n    },\n    rightContent:{\n        borderLeft : \".5em solid white\"\n    },\n    icon: {\n        width: 100,\n        height: 100,\n        backgroundColor: \"white\",\n        marginRight:\"4em\",\n        marginLeft:\"3em\"\n\n    },\n    icon1: {\n        width: 100,\n        height: 100,\n        backgroundColor: \"white\",\n        marginRight:\"10em\",\n        marginLeft:\"10em\"\n\n    },\n    logo: {\n        width: 50,\n        height: 50,\n        marginRight:\"4em\",\n        marginLeft:\"3em\"\n    },\n    vertical: {\n        borderLeft: \"6px solid white\",\n        height: \"450px\",\n        position: \"absolute\",\n        left: \"50%\"\n    }\n\n}))\n\nexport default function Home() {\n\n    const classes = useStyles();\n\n    return (\n        <Grid container className={classes.mainContainer} direction={\"column\"}>\n            <Grid item className={classes.grid1}>\n                <Grid container>\n                    <Grid item>\n                        <Typography className={classes.h4} variant={\"h4\"}>\n                            Services\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <img\n                            className={classes.logo}\n                            alt=\"Dashboard icon\"\n                            src={dbimage}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <img\n                            className={classes.logo}\n                            alt=\"Dashboard icon\"\n                            src={rpimage}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <img\n                            className={classes.logo}\n                            alt=\"Dashboard icon\"\n                            src={model}\n                        />\n                    </Grid>\n                </Grid>\n\n\n            </Grid>\n            <Grid item className={classes.grid2}>\n                {/*<Grid item className={classes.vertical}>*/}\n                {/*</Grid>*/}\n\n                <Grid container>\n                    <Grid item className={classes.griditem1}>\n                        <Grid container direction={\"column\"}>\n                            <Grid item >\n                                <Typography variant={\"h4\"}>\n                                    1. Dashboard\n                                </Typography>\n                            </Grid>\n                            <Grid item>\n                                <Typography variant={\"subtitle1\"}>\n                                    Check for Summarised and concise information\n                                </Typography>\n                                <Typography variant={\"subtitle1\"}>\n                                    Key metrics in one glance view, real time monitoring\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item >\n                        <img\n                            className={classes.icon}\n                            alt=\"Dashboard icon\"\n                            src={dbimage}\n                        />\n                    </Grid>\n                </Grid>\n\n            </Grid>\n            <Grid item className={classes.grid3}>\n\n                <Grid container>\n                    <Grid item className={classes.griditem3}>\n                        <Grid container direction={\"column\"}>\n                            <Grid item >\n                                <Typography variant={\"h4\"}>\n                                    2. Report\n                                </Typography>\n                            </Grid>\n                            <Grid item>\n                                <Typography variant={\"subtitle1\"}>\n                                    Check for Detailed information\n                                </Typography>\n                                <Typography variant={\"subtitle1\"}>\n                                    Includes historic data analysis with Trend charts\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item className={classes.griditem2}>\n                        <img\n                            className={classes.icon}\n                            alt=\"Report icon\"\n                            src={rpimage}\n                        />\n                    </Grid>\n                </Grid>\n\n            </Grid>\n            <Grid item className={classes.grid4}>\n\n                <Grid container>\n                    <Grid item className={classes.griditem1}>\n                        <Grid container direction={\"column\"}>\n                            <Grid item>\n                                <Typography variant={\"h4\"}>\n                                    3. Statistical Model\n                                </Typography>\n                            </Grid>\n                            <Grid item>\n                                <Typography variant={\"subtitle1\"}>\n                                    To infer about the population\n                                </Typography>\n                                <Typography variant={\"subtitle1\"}>\n                                    Negative Binomial Distribution Model\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item >\n                        <img\n                            className={classes.icon1}\n                            alt=\"Models icon\"\n                            src={model}\n                        />\n                    </Grid>\n                </Grid>\n\n            </Grid>\n        </Grid>\n    );\n}","/Users/sylviachadha/WebstormProjects/muhivproject/src/components/header.js",["75"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport logo from \"../images/hivlogo.svg\"\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    toolbar: {\n        backgroundColor: \"#3f72af\"\n        // backgroundColor: \"#253b6e\"\n    },\n    title: {\n        flexGrow: 1\n    },\n    icon: {\n        width:50,\n        height:50\n    },\n}));\n\nexport default function ButtonAppBar() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar className={classes.toolbar} >\n\n                    <Typography variant={\"h4\"} className={classes.title}>\n                        Bangkok HIV Epidemic Analysis\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","/Users/sylviachadha/WebstormProjects/muhivproject/src/pages/dashboard.js",["76","77","78","79","80","81","82"],"import React, {useState} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Typography} from \"@material-ui/core\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Plot from \"react-plotly.js\";\n\nimport {SVGMap} from \"react-svg-map\";\nimport BangkokSVG from '../components/bangkokmap';\nimport \"../css/map.css\";\nimport \"react-svg-map/lib/index.css\";\n\nconst useStyles = makeStyles(theme => ({\n    mainContainer: {\n        padding: 0,\n        margin: 0\n    },\n    root: {\n        minWidth: 180,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: '1.5rem',\n    },\n    pos: {\n        fontSize: 20,\n        color: \"brown\"\n    },\n    h4: {\n        color: \"#3f72af\"\n    },\n\n\n}))\n\nexport default function Dashboard() {\n\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>•</span>;\n\n    const Gauge1data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: 17.9, number: {suffix: \"%\"},\n            title: {text: \"Tested by RTRI\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    const Gauge2data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: 8.8, number: {suffix: \"%\"},\n            title: {text: \"RTRI Recent\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    const Gauge3data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: 25, number: {suffix: \"%\"},\n            title: {text: \"Reclassified Longterm\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    const Gauge4data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: 5.5, number: {suffix: \"%\"},\n            title: {text: \"RITA Recent\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    const xValue = ['VCT Site1', 'VCT Site2', 'VCT Site3', 'VCT Site4', 'VCT Site5'];\n\n    const yValue = [20, 14, 23, 50, 5];\n    const yValue2 = [24, 16, 20, 30, 4];\n\n    const trace0 = {\n        x: xValue,\n        y: yValue,\n        type: 'bar',\n        text: yValue.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"LT\",\n        opacity: 0.5,\n        marker: {\n            color: 'rgb(158,202,225)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const trace1 = {\n        x: xValue,\n        y: yValue2,\n        type: 'bar',\n        text: yValue2.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"Recent\",\n        marker: {\n            color: 'rgba(58,200,225,.5)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const Bar1Data = [trace0, trace1];\n\n    const Bar1Layout = {\n        width: 400,\n        height: 400,\n        title: \"RTRI by Site\",\n        xaxis: {title: 'Hospitals'},\n        yaxis: {title: 'No of HIV Cases'}\n    };\n\n    const x1Value = ['15-25', '15-35', '35-45', '45-55'];\n\n    const y1Value = [20, 25, 40, 30];\n    const y1Value2 = [24, 16, 30, 25];\n\n    const trace01 = {\n        x: x1Value,\n        y: y1Value,\n        type: 'bar',\n        text: yValue.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"LT\",\n        opacity: 0.5,\n        marker: {\n            color: 'rgb(158,202,225)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const trace11 = {\n        x: x1Value,\n        y: y1Value2,\n        type: 'bar',\n        text: yValue2.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"Recent\",\n        marker: {\n            color: 'rgba(58,200,225,.5)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const Bar2Data = [trace01, trace11];\n\n    const Bar2Layout = {\n        width: 430,\n        height: 350,\n        title: \"Age Group Impacted\",\n        xaxis: {title: 'Age group'},\n        yaxis: {title: 'No of HIV Cases'}\n    };\n\n    const x2Value = ['Male', 'Female', 'Transgender'];\n\n    const y2Value = [20, 25, 40];\n    const y2Value2 = [24, 16, 30];\n\n    const trace02 = {\n        x: x2Value,\n        y: y2Value,\n        type: 'bar',\n        text: yValue.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"LT\",\n        opacity: 0.5,\n        marker: {\n            color: 'rgb(158,202,225)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const trace12 = {\n        x: x2Value,\n        y: y2Value2,\n        type: 'bar',\n        text: yValue2.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"Recent\",\n        marker: {\n            color: 'rgba(58,200,225,.5)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const Bar3Data = [trace02, trace12];\n\n    const Bar3Layout = {\n        width: 420,\n        height: 350,\n        title: \"Gender Impacted\",\n        xaxis: {title: 'Gender'},\n        yaxis: {title: 'No of HIV Cases'}\n    };\n\n    const x3Value = ['Single', 'Married', 'Divorced'];\n\n    const y3Value = [20, 25, 40];\n    const y3Value2 = [24, 16, 30];\n\n    const trace03 = {\n        x: x3Value,\n        y: y3Value,\n        type: 'bar',\n        text: yValue.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"LT\",\n        opacity: 0.5,\n        marker: {\n            color: 'rgb(158,202,225)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const trace13 = {\n        x: x3Value,\n        y: y3Value2,\n        type: 'bar',\n        text: yValue2.map(String),\n        textposition: 'auto',\n        hoverinfo: 'none',\n        name: \"Recent\",\n        marker: {\n            color: 'rgba(58,200,225,.5)',\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    const Bar4Data = [trace03, trace13];\n\n    const Bar4Layout = {\n        width: 420,\n        height: 350,\n        title: \"Marital Status\",\n        xaxis: {title: 'Marital Status'},\n        yaxis: {title: 'No of HIV Cases'}\n    };\n\n    const Pie1Data = [{\n        values: [150, 280],\n        labels: ['Recent', 'Long-Term'],\n        type: 'pie'\n    }];\n\n    const Pie1Layout = {\n        width: 400,\n        height: 400,\n        title: 'RITA by Percentage'\n    };\n\n\n\n    const Pie2Data = [{\n        type: \"pie\",\n        values: [500000, 100000, 80000, 5000, 2000, 1388000],\n        labels: ['Heterosexual', 'MSM/TG', 'Injection Drug Use', 'Blood Transfusion', 'Perinatal'],\n        textinfo: \"label+percent\",\n        textposition: \"outside\",\n        automargin: true\n    }]\n\n    const Pie2Layout = {\n        height: 520,\n        width: 500,\n        margin: {\"t\": 0, \"b\": 0, \"l\": 0, \"r\": 0},\n        showlegend: true,\n        title: \"Transmission Risk\"\n    }\n\n    const values = [\n        ['Heterosexual', 'MSM/TG', 'Injection Drug Use', 'Blood Transfusion', 'Perinatal', 'Unknown', '<b>TOTAL</b>'],\n        [1200000, 100000, 80000, 5000, 2000, 1000, 1388000]]\n\n    //Map start\n    const [data, setData] = useState({\n        pointedLocation: null,\n        count: 0,\n        focusedLocation: null,\n        selectedLocations: [],\n        tooltipStyle: {\n            display: 'none'\n        }\n    });\n\n    const [locationCount, setLocationCount] = useState([\n        {location: \"Bang Phlat\", count: 10},\n        {location: \"Huai Khwang\", count: 20},\n        {location: \"Wang Thong Lang\", count: 30},\n        {location: \"Thawi Watthana\", count: 40},\n        {location: \"Din Daeng\", count: 50},\n        {location: \"Dusit\", count: 60},\n        {location: \"Ratchathewi\", count: 70},\n        {location: \"Vadhana\", count: 80},\n        {location: \"Thon buri\", count: 90},\n        {location: \"Sathon\", count: 20},\n        {location: \"Bang Na\", count: 30},\n        {location: \"Don Mueang\", count: 200},\n        {location: \"Bang Kapi\", count: 20},\n        {location: \"Lat Phrao\", count: 20},\n\n    ]);\n\n    const countArray = locationCount.flatMap(x => [x.count])\n    const median = calculateMedian(countArray)\n\n\n    const handleLocationMouseOver = (e) => {\n        const thaiLocation = getLocationName(e);\n        const englishLocation = getLocationId(e);\n\n        const locationRow = locationCount.find(element => element.location === englishLocation);\n        if (locationRow !== undefined && locationRow.count > 0) {\n            setData(prevState => ({\n                ...prevState,\n                count: locationRow.count\n            }));\n        } else {\n            setData(prevState => ({\n                ...prevState,\n                count: 0\n            }));\n        }\n        setData(prevState => ({\n            ...prevState,\n            pointedLocation: thaiLocation + \"  -  \" + englishLocation\n        }));\n    };\n\n\n    const handleLocationMouseOut = () => {\n        setData(prevState => ({\n            ...prevState,\n            pointedLocation: null,\n            tooltipStyle: {display: 'none'},\n        }));\n\n    }\n\n    const handleLocationMouseMove = (event) => {\n        const tooltipStyle = {\n            display: 'block',\n            top: event.clientY + 10,\n            left: event.clientX - 100\n        };\n\n        setData(prevState => ({\n            ...prevState,\n            tooltipStyle: tooltipStyle,\n        }));\n    }\n\n\n    const getLocationClassName = (mapLocation, _) => {\n\n        const locationRow = locationCount.find(element => element.location === mapLocation.id);\n        let strengthClass = \"color-strength1\"\n\n        if (locationRow !== undefined && locationRow.count > 0) {\n            if (locationRow.count < median) {\n                strengthClass = \"color-strength2\"\n            } else {\n                strengthClass = \"color-strength3\"\n            }\n\n        }\n        return `svg-map ${strengthClass}`\n\n    }\n    //Map end\n\n\n    return (\n        <Grid container className={classes.mainContainer} direction={\"column\"}>\n            <Grid item className={classes.maingrid1}>\n                <Grid container direction={\"row\"}>\n                    <Grid item>\n                        <Grid container direction={\"column\"}>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            4321\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            Total Test\n                                        </Typography>\n\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            318\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            New HIV +ve\n                                            <br/>\n\n                                        </Typography>\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            <br/>\n                                            57\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            Tested by RTRI\n                                        </Typography>\n\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            5\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            RTRI Recent\n                                            <br/>\n\n                                        </Typography>\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            <br/>\n                                            52\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            RTRI Longterm\n                                        </Typography>\n\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            4\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            VL Result Complete\n                                            <br/>\n\n                                        </Typography>\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            <br/>\n                                            1\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            Reclassified Longterm\n                                        </Typography>\n\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            3\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            RITA Recent\n                                            <br/>\n\n                                        </Typography>\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            <br/>\n                                            52\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            RITA Longterm\n                                        </Typography>\n\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <Grid container direction={\"column\"}>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            402\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n\n                                            Total HIV +ve\n                                        </Typography>\n\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge1data}\n                                            layout={{\n                                                width: 300, height: 180, margin: {t: 0, b: 0},\n                                                paper_bgcolor: \"#eaeaea\"\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar: false, staticPlot: false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge2data}\n                                            layout={{\n                                                width: 300, height: 180, margin: {t: 0, b: 0},\n                                                paper_bgcolor: \"#eaeaea\"\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar: false, staticPlot: false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge3data}\n                                            layout={{\n                                                width: 300, height: 180, margin: {t: 0, b: 0},\n                                                paper_bgcolor: \"#eaeaea\"\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar: false, staticPlot: false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge4data}\n                                            layout={{\n                                                width: 300, height: 180, margin: {t: 0, b: 0},\n                                                paper_bgcolor: \"#eaeaea\"\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar: false, staticPlot: false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <Grid container direction={\"column\"}>\n                            <Grid item>\n                                <Grid container>\n                                    <Grid item>\n                                        <Card className={classes.root} variant=\"outlined\">\n                                            <CardContent>\n\n                                                <Plot\n                                                    data={Bar1Data}\n                                                    layout={Bar1Layout}\n\n                                                    // To disable trace\n                                                    config={{displayModeBar: false, staticPlot: false}}\n                                                />\n                                            </CardContent>\n                                        </Card>\n                                    </Grid>\n                                    <Grid item>\n                                        <Card className={classes.root} variant=\"outlined\">\n                                            <CardContent>\n\n                                                <Plot\n                                                    data={Pie1Data}\n                                                    layout={Pie1Layout}\n\n                                                    // To disable trace\n                                                    config={{displayModeBar: false, staticPlot: false}}\n                                                />\n                                            </CardContent>\n                                        </Card>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item  style={{marginTop:\"2em\",marginLeft:\"6em\"}}>\n                                <Grid container>\n                                    <p className={classes.title}>Hotspot Locations</p>\n                                    <SVGMap\n                                        map={BangkokSVG}\n                                        locationClassName={getLocationClassName}\n                                        onLocationMouseOver={handleLocationMouseOver}\n                                        onLocationMouseOut={handleLocationMouseOut}\n                                        onLocationMouseMove={handleLocationMouseMove}\n\n                                    />\n                                    <div className=\"svg-map-tooltip\" style={data.tooltipStyle}>\n                                        <div>Location:{data.pointedLocation}</div>\n                                        <div>Count:{data.count}</div>\n                                    </div>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n\n            <Grid item className={classes.maingrid3}>\n                <Grid container>\n                    <Grid item>\n                        <Card className={classes.root} variant=\"outlined\">\n                            <CardContent>\n\n                                <Plot\n                                    data={Bar2Data}\n                                    layout={Bar2Layout}\n\n                                    // To disable trace\n                                    config={{displayModeBar: false, staticPlot: false}}\n                                />\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item>\n                        <Card className={classes.root} variant=\"outlined\">\n                            <CardContent>\n\n                                <Plot\n                                    data={Bar3Data}\n                                    layout={Bar3Layout}\n\n                                    // To disable trace\n                                    config={{displayModeBar: false, staticPlot: false}}\n                                />\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item>\n                        <Card className={classes.root} variant=\"outlined\">\n                            <CardContent>\n\n                                <Plot\n                                    data={Bar4Data}\n                                    layout={Bar4Layout}\n\n                                    // To disable trace\n                                    config={{displayModeBar: false, staticPlot: false}}\n                                />\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n\n    );\n}\n\n// Map function for median\nfunction getLocationName(event) {\n    return event.target.attributes.name.value;\n}\n\nfunction getLocationId(event) {\n    return event.target.id;\n}\n\nfunction calculateMedian(values) {\n    if (values.length === 0) return 0;\n\n    values.sort(function (a, b) {\n        return a - b;\n    });\n\n    const half = Math.floor(values.length / 2);\n\n    if (values.length % 2)\n        return values[half];\n\n    return (values[half - 1] + values[half]) / 2.0;\n}\n// Map function","/Users/sylviachadha/WebstormProjects/muhivproject/src/components/bangkokmap.js",[],["83","84"],"/Users/sylviachadha/WebstormProjects/muhivproject/src/pages/report.js",["85","86","87","88","89"],"import React from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport VerticalMenu from \"../components/sidemenu\";\nimport DateSelection from \"../components/dateselection\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Plot from \"react-plotly.js\";\n\nconst useStyles = makeStyles(theme => ({\n    mainContainer: {\n        padding: 0,\n        margin: 0\n    },\n    sideMenu: {\n        display: \"inline-block\",\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"300px\",\n        backgroundColor: '#1f5f8b'\n    },\n    sideMenu2: {\n    },\n    item: {\n        marginLeft: 350\n    },\n    itemHeading: {\n        marginLeft: 350,\n        marginTop: 20,\n        borderBottom: \"3px solid #cdd0cb\",\n        width: \"80%\"\n    },\n    text: {\n        marginTop: 30,\n        marginBottom: 50,\n        fontWeight: \"200\"\n    },\n    root: {\n        minWidth: 250,\n        marginRight: 50\n    },\n    pos: {\n        fontSize: 20,\n        height: 170\n    },\n    h4: {\n        color: \"#3f72af\",\n    },\n\n}))\n\nexport default function Report() {\n\n    const classes = useStyles();\n\n    const Gauge1data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: 90.1, number: {suffix: \"%\"},\n            title: {text: \"Tested by RTRI\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    const Gauge2data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: 30.4, number: {suffix: \"%\"},\n            title: {text: \"RTRI Recent\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    const Gauge3data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: 5, number: {suffix: \"%\"},\n            title: {text: \"RITA Recent\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    return (\n\n        <Grid container className={classes.mainContainer}>\n            <Grid item className={classes.sideMenu}>\n                <VerticalMenu></VerticalMenu>\n            </Grid>\n            <Grid item>\n                <Grid container className={classes.sideMenu2} direction={\"column\"}>\n                    <Grid item className={classes.itemHeading}>\n                        <Typography variant={'h6'}>\n                            Overall Testing\n                        </Typography>\n                    </Grid>\n                    <Grid item className={classes.item}>\n                        <Grid container className={classes.text} >\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n\n                                            318\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Newly Diagnosed HIV +ve\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            310\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Tested by RTRI\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge1data}\n                                            layout={{width: 320, height: 220, margin: { t: 0, b: 0 },  paper_bgcolor: \"lavender\",\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar:false,staticPlot:false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item className={classes.itemHeading}>\n                        <Typography variant={'h6'}>\n                            Rapid Test for Recent Infection [RTRI] Result\n                        </Typography>\n                    </Grid>\n                    <Grid item className={classes.item}>\n                        <Grid container className={classes.text}>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n\n                                            70\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            RTRI Recent\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            240\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Longterm\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge2data}\n                                            layout={{width: 320, height: 220, margin: { t: 0, b: 0 },  paper_bgcolor: \"lavender\",\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar:false,staticPlot:false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item className={classes.itemHeading}>\n                        <Typography variant={'h6'}>\n                            Viral Load Test Results\n                        </Typography>\n                    </Grid>\n                    <Grid item className={classes.item}>\n                        <Grid container className={classes.text}>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n\n                                            65\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            VL Result Complete\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            5\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Reclassified Longterm\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge3data}\n                                            layout={{width: 320, height: 220, margin: { t: 0, b: 0 },  paper_bgcolor: \"lavender\",\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar:false,staticPlot:false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item className={classes.itemHeading}>\n                    <Typography variant={'h6'}>\n                        Recent Infection Testing Algorithm [RITA] Result\n                    </Typography>\n\n                    </Grid>\n                    <Grid item className={classes.item}>\n                        <Grid container className={classes.text}>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n\n                                            62\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            RITA Recent\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            3\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Longterm\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge3data}\n                                            layout={{width: 320, height: 220, margin: { t: 0, b: 0 },  paper_bgcolor: \"lavender\",\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar:false,staticPlot:false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}","/Users/sylviachadha/WebstormProjects/muhivproject/src/components/sidemenu.js",["90","91","92"],"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\n\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        height: '100%',\n        // backgroundColor: '#364f6b','#5588a3'\n        backgroundColor: '#1f5f8b',\n        color: 'white',\n        display: 'inline-block',\n        fontSize:20,\n        listItemText:{\n            fontSize:'5em',//Insert your required size\n        }\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n}));\n\nexport default function VerticalMenu() {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n\n\n    const [openRecency, setOpenRecency] = React.useState(true);\n\n\n    const handleRecencyClick = () => {\n        setOpenRecency(!openRecency);\n    };\n\n    return (\n        <List component=\"nav\" className={classes.root}>\n\n            <ListItem button onClick={handleRecencyClick}>\n                <ListItemIcon>\n                    <AssessmentIcon style={{color: '#fff'}}/>\n                </ListItemIcon>\n                <ListItemText primary=\"Recency Report\"/>\n                {openRecency ? <ExpandLess/> : <ExpandMore/>}\n            </ListItem>\n\n            <Collapse in={openRecency} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    <ListItem button component=\"a\" href=\"/overview\" className={classes.nested}>\n                        <ListItemIcon>\n                            <PlayArrowIcon style={{color: '#fff'}}/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Overview\"/>\n                    </ListItem>\n\n                </List>\n            </Collapse>\n\n\n            <ListItem button onClick={{}}>\n                <ListItemIcon>\n                    <AssessmentIcon style={{color: '#fff'}}/>\n                </ListItemIcon>\n                <ListItemText primary=\"Demographic\"/>\n                {open ? <ExpandLess/> : <ExpandMore/>}\n            </ListItem>\n\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    <ListItem button component=\"a\" href=\"/by-gender\" className={classes.nested}>\n                        <ListItemIcon>\n                            <PlayArrowIcon style={{color: '#fff'}}/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"By Gender\"/>\n                    </ListItem>\n                    <ListItem button component=\"a\" href=\"/by-status\" className={classes.nested}>\n                        <ListItemIcon>\n                            <PlayArrowIcon style={{color: '#fff'}}/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"By Marital status\"/>\n                    </ListItem>\n                    <ListItem button component=\"a\" href=\"/by-age\" className={classes.nested}>\n                        <ListItemIcon>\n                            <PlayArrowIcon style={{color: '#fff'}}/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"By Age\"/>\n                    </ListItem>\n                </List>\n            </Collapse>\n\n\n            <ListItem button onClick={{}}>\n                <ListItemIcon>\n                    <AssessmentIcon style={{color: '#fff'}}/>\n                </ListItemIcon>\n                <ListItemText primary=\"Behaviour\"/>\n                {open ? <ExpandLess/> : <ExpandMore/>}\n            </ListItem>\n\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    <ListItem button component=\"a\" href=\"/by-risk\" className={classes.nested}>\n                        <ListItemIcon>\n                            <PlayArrowIcon style={{color: '#fff'}}/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"By Transmission Risk\"/>\n                    </ListItem>\n\n                </List>\n            </Collapse>\n\n            <ListItem button onClick={{}}>\n                <ListItemIcon>\n                    <AssessmentIcon style={{color: '#fff'}}/>\n                </ListItemIcon>\n                <ListItemText primary=\"Geographic\"/>\n                {open ? <ExpandLess/> : <ExpandMore/>}\n            </ListItem>\n\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    <ListItem button className={classes.nested}>\n                        <ListItemIcon>\n                            <PlayArrowIcon style={{color: '#fff'}}/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"By Area\"/>\n                    </ListItem>\n                    <ListItem button component=\"a\" href=\"/by-site\" className={classes.nested}>\n                        <ListItemIcon>\n                            <PlayArrowIcon style={{color: '#fff'}}/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"By Testing Site\"/>\n                    </ListItem>\n                </List>\n            </Collapse>\n\n            <ListItem button onClick={{}}>\n                <ListItemIcon>\n                    <AssessmentIcon style={{color: '#fff'}}/>\n                </ListItemIcon>\n                <ListItemText primary=\"Partner Test\"/>\n                {open ? <ExpandLess/> : <ExpandMore/>}\n            </ListItem>\n\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    <ListItem button component=\"a\" href=\"/by-outcome\" className={classes.nested}>\n                        <ListItemIcon>\n                            <PlayArrowIcon style={{color: '#fff'}}/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"HIV Test Outcome\"/>\n                    </ListItem>\n                </List>\n            </Collapse>\n\n        </List>\n    );\n}","/Users/sylviachadha/WebstormProjects/muhivproject/src/reportpages/overview.js",["93","94","95","96","97"],"import React from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport VerticalMenu from \"../components/sidemenu\";\nimport DateSelection from \"../components/dateselection\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Plot from \"react-plotly.js\";\n\nconst useStyles = makeStyles(theme => ({\n    mainContainer: {\n        padding: 0,\n        margin: 0\n    },\n    sideMenu: {\n        display: \"inline-block\",\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"300px\",\n        backgroundColor: '#1f5f8b'\n    },\n    sideMenu2: {\n    },\n    item: {\n        marginLeft: 350\n    },\n    itemHeading: {\n        marginLeft: 350,\n        marginTop: 20,\n        borderBottom: \"3px solid #cdd0cb\",\n        width: \"80%\"\n    },\n    text: {\n        marginTop: 30,\n        marginBottom: 50,\n        fontWeight: \"200\"\n    },\n    root: {\n        minWidth: 250,\n        marginRight: 50\n    },\n    pos: {\n        fontSize: 20,\n        height: 170\n    },\n    h4: {\n        color: \"#3f72af\",\n    },\n\n}))\n\nexport default function Report() {\n\n    const classes = useStyles();\n\n    const Gauge1data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: 90.1, number: {suffix: \"%\"},\n            title: {text: \"Tested by RTRI\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    const Gauge2data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: 30.4, number: {suffix: \"%\"},\n            title: {text: \"RTRI Recent\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    const Gauge3data = [\n        {\n            domain: {x: [0, 1], y: [0, 1]},\n            value: 5, number: {suffix: \"%\"},\n            title: {text: \"RITA Recent\"},\n            type: \"indicator\",\n            mode: \"gauge+number\",\n            delta: {reference: 100},\n            gauge: {axis: {range: [null, 100]}}\n        }\n    ];\n\n    return (\n\n        <Grid container className={classes.mainContainer}>\n            <Grid item className={classes.sideMenu}>\n                <VerticalMenu></VerticalMenu>\n            </Grid>\n            <Grid item>\n                <Grid container className={classes.sideMenu2} direction={\"column\"}>\n                    <Grid item className={classes.itemHeading}>\n                        <Typography variant={'h6'}>\n                            Overall Testing\n                        </Typography>\n                    </Grid>\n                    <Grid item className={classes.item}>\n                        <Grid container className={classes.text} >\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n\n                                            318\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Newly Diagnosed HIV +ve\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            310\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Tested by RTRI\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge1data}\n                                            layout={{width: 320, height: 220, margin: { t: 0, b: 0 },  paper_bgcolor: \"lavender\",\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar:false,staticPlot:false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item className={classes.itemHeading}>\n                        <Typography variant={'h6'}>\n                            Rapid Test for Recent Infection [RTRI] Result\n                        </Typography>\n                    </Grid>\n                    <Grid item className={classes.item}>\n                        <Grid container className={classes.text}>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n\n                                            70\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            RTRI Recent\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            240\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Longterm\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge2data}\n                                            layout={{width: 320, height: 220, margin: { t: 0, b: 0 },  paper_bgcolor: \"lavender\",\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar:false,staticPlot:false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item className={classes.itemHeading}>\n                        <Typography variant={'h6'}>\n                            Viral Load Test Results\n                        </Typography>\n                    </Grid>\n                    <Grid item className={classes.item}>\n                        <Grid container className={classes.text}>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n\n                                            65\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            VL Result Complete\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            5\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Reclassified Longterm\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge3data}\n                                            layout={{width: 320, height: 220, margin: { t: 0, b: 0 },  paper_bgcolor: \"lavender\",\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar:false,staticPlot:false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item className={classes.itemHeading}>\n                        <Typography variant={'h6'}>\n                            Recent Infection Testing Algorithm [RITA] Result\n                        </Typography>\n\n                    </Grid>\n                    <Grid item className={classes.item}>\n                        <Grid container className={classes.text}>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n\n                                            62\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            RITA Recent\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Typography className={classes.h4} variant=\"h4\" component=\"h2\">\n                                            3\n\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <br/>\n                                            Longterm\n                                            <br/>\n\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Gauge3data}\n                                            layout={{width: 320, height: 220, margin: { t: 0, b: 0 },  paper_bgcolor: \"lavender\",\n                                            }}\n\n                                            // To disable trace\n                                            config={{displayModeBar:false,staticPlot:false}}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}","/Users/sylviachadha/WebstormProjects/muhivproject/src/components/dateselection.js",["98"],"import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nexport default function DateSelection() {\n    // The first commit of Material-UI\n    const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\n\n    const handleDateChange = (date) => {\n        setSelectedDate(date);\n    };\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container justify=\"space-around\">\n                <KeyboardDatePicker\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"MM/dd/yyyy\"\n                    margin=\"normal\"\n                    id=\"date-picker-inline\"\n                    label=\"Date picker inline\"\n                    value={selectedDate}\n                    onChange={handleDateChange}\n                    KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                    }}\n                />\n                <KeyboardDatePicker\n                    margin=\"normal\"\n                    id=\"date-picker-dialog\"\n                    label=\"Date picker dialog\"\n                    format=\"MM/dd/yyyy\"\n                    value={selectedDate}\n                    onChange={handleDateChange}\n                    KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                    }}\n                />\n            </Grid>\n        </MuiPickersUtilsProvider>\n    );\n}\n","/Users/sylviachadha/WebstormProjects/muhivproject/src/reportpages/gender.js",[],"/Users/sylviachadha/WebstormProjects/muhivproject/src/reportpages/maritalstatus.js",[],"/Users/sylviachadha/WebstormProjects/muhivproject/src/reportpages/risk.js",["99"],"import React from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport VerticalMenu from \"../components/sidemenu\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Plot from \"react-plotly.js\";\n\nconst useStyles = makeStyles(theme => ({\n    mainContainer: {\n        padding: 0,\n        margin: 0\n    },\n    sideMenu: {\n        display: \"inline-block\",\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"300px\",\n        backgroundColor: '#1f5f8b'\n    },\n    item: {\n        marginLeft: 350\n    },\n    itemHeading: {\n        marginLeft: 350,\n        marginTop: 20,\n        // borderBottom: \"3px solid #cdd0cb\",\n        width: \"80%\"\n    },\n}))\n\nexport default function Risk() {\n\n    const classes = useStyles();\n\n    const Pie1Data = [{\n        type: \"pie\",\n        values: [500000, 100000, 80000, 5000, 2000, 1388000],\n        labels: ['Heterosexual', 'MSM/TG', 'Injection Drug Use', 'Blood Transfusion', 'Perinatal'],\n        textinfo: \"label+percent\",\n        textposition: \"outside\",\n        automargin: true\n    }]\n\n    const Pie1Layout = {\n        height: 450,\n        width: 550,\n        margin: {\"t\": 0, \"b\": 0, \"l\": 0, \"r\": 0},\n        showlegend: true,\n        title: \"Transmission Risk\"\n    }\n\n    const values = [\n        ['Heterosexual', 'MSM/TG', 'Injection Drug Use', 'Blood Transfusion', 'Perinatal', 'Unknown', '<b>TOTAL</b>'],\n        [1200000, 100000, 80000, 5000, 2000, 1000, 1388000]]\n\n    const TableData = [{\n        type: 'table',\n        header: {\n            values: [[\"<b>Risk</b>\"], [\"<b>HIV Transmission</b>\"]],\n            align: [\"left\", \"center\"],\n            line: {width: 1, color: '#506784'},\n            fill: {color: '#119DFF'},\n            font: {family: \"Arial\", size: 17, color: \"white\"}\n        },\n        cells: {\n            values: values,\n            align: [\"left\", \"center\"],\n            line: {color: \"#506784\", width: 1},\n            fill: {color: ['#08f6e3', 'white']},\n            font: {family: \"Arial\", size: 15, color: [\"#506784\"]}\n        }\n    }]\n\n    return (\n        <Grid container className={classes.mainContainer} direction={\"row\"}>\n            <Grid item className={classes.sideMenu}>\n                <VerticalMenu></VerticalMenu>\n            </Grid>\n            <Grid item className={classes.itemHeading}>\n                <Grid container direction={\"column\"}>\n                    <Grid item>\n                        <Grid container direction={\"row\"}>\n                            <Grid item>\n                                <Card className={classes.root} variant=\"outlined\">\n                                    <CardContent>\n\n                                        <Plot\n                                            data={Pie1Data}\n                                            layout={Pie1Layout}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}","/Users/sylviachadha/WebstormProjects/muhivproject/src/reportpages/partnerhiv.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":8,"column":8,"nodeType":"106","messageId":"107","endLine":8,"endColumn":11},{"ruleId":"104","severity":1,"message":"108","line":6,"column":8,"nodeType":"106","messageId":"107","endLine":6,"endColumn":12},{"ruleId":"104","severity":1,"message":"109","line":6,"column":8,"nodeType":"106","messageId":"107","endLine":6,"endColumn":19},{"ruleId":"104","severity":1,"message":"110","line":8,"column":8,"nodeType":"106","messageId":"107","endLine":8,"endColumn":14},{"ruleId":"104","severity":1,"message":"111","line":46,"column":11,"nodeType":"106","messageId":"107","endLine":46,"endColumn":15},{"ruleId":"104","severity":1,"message":"112","line":310,"column":11,"nodeType":"106","messageId":"107","endLine":310,"endColumn":19},{"ruleId":"104","severity":1,"message":"113","line":319,"column":11,"nodeType":"106","messageId":"107","endLine":319,"endColumn":21},{"ruleId":"104","severity":1,"message":"114","line":327,"column":11,"nodeType":"106","messageId":"107","endLine":327,"endColumn":17},{"ruleId":"104","severity":1,"message":"115","line":342,"column":27,"nodeType":"106","messageId":"107","endLine":342,"endColumn":43},{"ruleId":"100","replacedBy":"116"},{"ruleId":"102","replacedBy":"117"},{"ruleId":"104","severity":1,"message":"118","line":5,"column":8,"nodeType":"106","messageId":"107","endLine":5,"endColumn":21},{"ruleId":"104","severity":1,"message":"119","line":6,"column":8,"nodeType":"106","messageId":"107","endLine":6,"endColumn":15},{"ruleId":"104","severity":1,"message":"120","line":8,"column":8,"nodeType":"106","messageId":"107","endLine":8,"endColumn":14},{"ruleId":"104","severity":1,"message":"109","line":10,"column":8,"nodeType":"106","messageId":"107","endLine":10,"endColumn":19},{"ruleId":"104","severity":1,"message":"110","line":12,"column":8,"nodeType":"106","messageId":"107","endLine":12,"endColumn":14},{"ruleId":"104","severity":1,"message":"121","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":21},{"ruleId":"104","severity":1,"message":"122","line":12,"column":8,"nodeType":"106","messageId":"107","endLine":12,"endColumn":18},{"ruleId":"104","severity":1,"message":"123","line":37,"column":18,"nodeType":"106","messageId":"107","endLine":37,"endColumn":25},{"ruleId":"104","severity":1,"message":"118","line":5,"column":8,"nodeType":"106","messageId":"107","endLine":5,"endColumn":21},{"ruleId":"104","severity":1,"message":"119","line":6,"column":8,"nodeType":"106","messageId":"107","endLine":6,"endColumn":15},{"ruleId":"104","severity":1,"message":"120","line":8,"column":8,"nodeType":"106","messageId":"107","endLine":8,"endColumn":14},{"ruleId":"104","severity":1,"message":"109","line":10,"column":8,"nodeType":"106","messageId":"107","endLine":10,"endColumn":19},{"ruleId":"104","severity":1,"message":"110","line":12,"column":8,"nodeType":"106","messageId":"107","endLine":12,"endColumn":14},{"ruleId":"104","severity":1,"message":"124","line":7,"column":5,"nodeType":"106","messageId":"107","endLine":7,"endColumn":23},{"ruleId":"104","severity":1,"message":"125","line":57,"column":11,"nodeType":"106","messageId":"107","endLine":57,"endColumn":20},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'bull' is assigned a value but never used.","'Pie2Data' is assigned a value but never used.","'Pie2Layout' is assigned a value but never used.","'values' is assigned a value but never used.","'setLocationCount' is assigned a value but never used.",["126"],["127"],"'DateSelection' is defined but never used.","'Toolbar' is defined but never used.","'AppBar' is defined but never used.","'ListSubheader' is defined but never used.","'StarBorder' is defined but never used.","'setOpen' is assigned a value but never used.","'KeyboardTimePicker' is defined but never used.","'TableData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]